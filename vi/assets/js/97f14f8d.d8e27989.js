"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8967],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},68260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>k,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var a=n(87462),r=n(63366),o=(n(67294),n(3905));const i=n.p+"assets/images/create-mainnet-account-d624261d742f39effc6ff8e351d22b75.png",l=n.p+"assets/images/create-testnet-wallet-account-6bcfc4b15c7ff93126ae723be2ab3701.png";var c=["components"],s={sidebar_position:4,sidebar_label:"Linkdrop contract",title:"Introducing the linkdrop contract we can use"},p="The linkdrop contract",d={unversionedId:"tutorials/crosswords/intermediate/linkdrop",id:"tutorials/crosswords/intermediate/linkdrop",title:"Introducing the linkdrop contract we can use",description:"",source:"@site/../docs/3.tutorials/crosswords/03-intermediate/03-linkdrop.md",sourceDirName:"3.tutorials/crosswords/03-intermediate",slug:"/tutorials/crosswords/intermediate/linkdrop",permalink:"/near-docs-kor/vi/tutorials/crosswords/intermediate/linkdrop",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/crosswords/03-intermediate/03-linkdrop.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"8 thg 2, 2023",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Linkdrop contract",title:"Introducing the linkdrop contract we can use"},sidebar:"tutorials",previous:{title:"Seed phrase logic",permalink:"/near-docs-kor/vi/tutorials/crosswords/intermediate/use-seed-phrase"},next:{title:"Cross-contract calls, etc.",permalink:"/near-docs-kor/vi/tutorials/crosswords/intermediate/cross-contract-calls"}},u={},m=[{value:"Testnet",id:"testnet",level:2},{value:"Mainnet",id:"mainnet",level:2},{value:"A simple callback",id:"a-simple-callback",level:2},{value:"The <code>create_account</code> method",id:"the-create_account-method",level:3},{value:"The callback",id:"the-callback",level:3}],h={toc:m};function k(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"the-linkdrop-contract"},"The linkdrop contract"),(0,o.kt)("p",null,"We're going to take a small detour to talk about the linkdrop smart contract.  It's best that we first understand this contract and its purpose, then discuss calling a method on this contract."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/near/near-linkdrop"},"The linkdrop contract")," is deployed to the accounts ",(0,o.kt)("inlineCode",{parentName:"p"},"testnet")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"near"),", which are known as the top-level accounts of the testnet and mainnet network, respectively. (Anyone can create a linkdrop-style contract elsewhere, but the one shown here is the main one that others are patterned off of.)"),(0,o.kt)("h2",{id:"testnet"},"Testnet"),(0,o.kt)("p",null,"There\u2019s nothing special about testnet accounts; there is no real-world cost to you as a developer when creating testnet accounts, so feel free to create or delete at your convenience."),(0,o.kt)("p",null,"When a user signs up for a testnet account on NEAR Wallet, they'll see this:"),(0,o.kt)("img",{src:l,width:"400"}),(0,o.kt)("p",null,"Let's discuss how this testnet account gets created. "),(0,o.kt)("p",null,"Notice the new account will end in ",(0,o.kt)("inlineCode",{parentName:"p"},".testnet"),". This is because the account ",(0,o.kt)("inlineCode",{parentName:"p"},"testnet")," will create a subaccount (like we learned about ",(0,o.kt)("a",{parentName:"p",href:"/near-docs-kor/vi/tutorials/crosswords/basics/add-functions-call#create-a-subaccount"},"earlier in this tutorial"),") called ",(0,o.kt)("inlineCode",{parentName:"p"},"vacant-name.testnet"),"."),(0,o.kt)("p",null,"There are two ways to create this subaccount:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Use a full-access key for the account ",(0,o.kt)("inlineCode",{parentName:"li"},"testnet")," to sign a transaction with the ",(0,o.kt)("inlineCode",{parentName:"li"},"CreateAccount")," Action."),(0,o.kt)("li",{parentName:"ol"},"In a smart contract deployed to the ",(0,o.kt)("inlineCode",{parentName:"li"},"testnet")," account, call the ",(0,o.kt)("inlineCode",{parentName:"li"},"CreateAccount")," Action, which is an async method that returns a Promise. (More info about writing a ",(0,o.kt)("a",{parentName:"li",href:"/sdk/rust/promises/create-account"},(0,o.kt)("inlineCode",{parentName:"a"},"CreateAccount")," Promise"),".)")),(0,o.kt)("p",null,"(In the example below that uses NEAR CLI to create a new account, it's calling ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateAccount"),' on the linkdrop contract that is deployed to the top level "near" account on mainnet.)'),(0,o.kt)("h2",{id:"mainnet"},"Mainnet"),(0,o.kt)("p",null,"On mainnet, the account ",(0,o.kt)("inlineCode",{parentName:"p"},"near")," also has the linkdrop contract deployed to it."),(0,o.kt)("p",null,"Using NEAR CLI, a person can create a mainnet account by calling the linkdrop contract, like shown below:"),(0,o.kt)("img",{src:i}),(0,o.kt)("p",null,"The above command calls the ",(0,o.kt)("inlineCode",{parentName:"p"},"create_account")," method on the account ",(0,o.kt)("inlineCode",{parentName:"p"},"near"),", and would create ",(0,o.kt)("inlineCode",{parentName:"p"},"aloha.near")," ",(0,o.kt)("strong",{parentName:"p"},"if it's available"),", funding it with 15 \u24c3."),(0,o.kt)("p",null,"We'll want to write a smart contract that calls that same method. However, things get interesting because it's possible ",(0,o.kt)("inlineCode",{parentName:"p"},"aloha.near")," is already taken, so we'll need to learn how to handle that."),(0,o.kt)("h2",{id:"a-simple-callback"},"A simple callback"),(0,o.kt)("h3",{id:"the-create_account-method"},"The ",(0,o.kt)("inlineCode",{parentName:"h3"},"create_account")," method"),(0,o.kt)("p",null,"Here, we'll show the implementation of the ",(0,o.kt)("inlineCode",{parentName:"p"},"create_account")," method. Note the ",(0,o.kt)("inlineCode",{parentName:"p"},"#[payable]")," macro, which allows this function to accept an attached deposit. (Remember in the CLI command we were attaching 15 \u24c3.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust",metastring:"reference",reference:!0},"https://github.com/near/near-linkdrop/blob/ba94a9c7292d3b48a0a8ba380fb0e7ff6b24efc6/src/lib.rs#L125-L149\n")),(0,o.kt)("p",null,"The most important part of the snippet above is around the middle where there's:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rs"},"Promise::new(...)\n    ...\n    .then(\n        Self::ext(env::current_account_id())\n            .on_account_created(...)\n    )\n")),(0,o.kt)("p",null,"This translates to, \"we're going to attempt to perform an Action, and when we're done, please call myself at the method ",(0,o.kt)("inlineCode",{parentName:"p"},"on_account_created"),' so we can see how that went."'),(0,o.kt)("admonition",{title:"This doesn't work",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Not infrequently, developers will attempt to do this in a smart contract:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'let creation_result = Promise::new("aloha.mike.near")\n  .create_account();\n\n// Check creation_result variable (can\'t do it!)\nif creation_result {...}\n\n')),(0,o.kt)("p",{parentName:"admonition"},"In other programming languages promises might work like this, but we must use callbacks instead. ")),(0,o.kt)("h3",{id:"the-callback"},"The callback"),(0,o.kt)("p",null,"Now let's look at the callback:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust",metastring:"reference",reference:!0},"https://github.com/near/near-linkdrop/blob/ba94a9c7292d3b48a0a8ba380fb0e7ff6b24efc6/src/lib.rs#L151-L164\n")),(0,o.kt)("p",null,"This calls the private helper method ",(0,o.kt)("inlineCode",{parentName:"p"},"is_promise_success"),", which basically checks to see that there was only one promise result, because we only attempted one Promise:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust",metastring:"reference",reference:!0},"https://github.com/near/near-linkdrop/blob/ba94a9c7292d3b48a0a8ba380fb0e7ff6b24efc6/src/lib.rs#L32-L42\n")),(0,o.kt)("p",null,"Note that the callback returns a boolean. This means when we modify our crossword puzzle to call the linkdrop contract on ",(0,o.kt)("inlineCode",{parentName:"p"},"testnet"),", we'll be able to determine if the account creation succeeded or failed."),(0,o.kt)("p",null,"And that's it! Now we've seen a method and a callback in action for a simple contract."),(0,o.kt)("admonition",{title:"This is important",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Understanding cross-contract calls and callbacks is quite important in smart contract development."),(0,o.kt)("p",{parentName:"admonition"},"Since NEAR's transactions are asynchronous, the use of callbacks may be a new paradigm shift for smart contract developers from other ecosystems. "),(0,o.kt)("p",{parentName:"admonition"},"Feel free to dig into the linkdrop contract and play with the ideas presented in this section."),(0,o.kt)("p",{parentName:"admonition"},"There are two additional examples that are helpful to look at:"),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/near-sdk-rs/blob/master/examples/cross-contract-calls/high-level/src/lib.rs"},"High-level cross-contract calls")," \u2014 this is similar what we've seen in the linkdrop contract."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/near-sdk-rs/blob/master/examples/cross-contract-calls/low-level/src/lib.rs"},"Low-level cross-contract calls")," \u2014 a different approach where you don't use the traits we mentioned."))),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Next we'll modify the crossword puzzle contract to check for the signer's public key, which is how we now determine if they solved the puzzle correctly."))}k.isMDXComponent=!0}}]);