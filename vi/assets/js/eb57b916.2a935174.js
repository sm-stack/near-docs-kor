"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3048],{90346:(e,t,a)=>{a.d(t,{Ey:()=>d,O2:()=>c,SQ:()=>p});var r=a(67294),n=a(74866),s=a(85162),o=a(1841),i=a.n(o),l=a(95665),u=a.n(l);function c(e){var t=e.children;return Array.isArray(t)||(t=[t]),r.createElement(n.Z,{className:"language-tabs",groupId:"code-tabs"},t.map((function(e,t){return r.createElement(s.Z,{value:e.props.value,label:e.props.value},e)})))}function p(e){var t=e.children,a=e.language;return Array.isArray(t)||(t=[t]),t=t.map((function(e){return function(e,t){var a=e.props,n=a.children,s=a.url,o=a.start,l=a.end,u=a.fname;if("Github"==e.props.mdxType)return d({url:s,start:o,end:l,language:t,fname:u});if("CodeBlock"==e.props.mdxType)return r.createElement(i(),{fname:u,language:t},n);return e}(e,a)})),1==t.length?r.createElement(s.Z,{value:0,label:t[0].props.fname},t[0]):r.createElement(n.Z,{className:"file-tabs"},t.map((function(e,t){return r.createElement(s.Z,{value:t,label:e.props.fname},e)})))}function d(e){var t=e.url,a=e.start,n=e.end,s=e.language,o=e.fname,i=t+"#";return a&&n&&(i+="L"+a+"-L"+n+"#"),r.createElement(u(),{language:s,fname:o},i)}},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(67294),n=a(86010);const s="tabItem_Ymn6";function o(e){var t=e.children,a=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(s,o),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>T});var r=a(87462),n=a(67294),s=a(86010),o=a(12466),i=a(76775),l=a(91980),u=a(67392),c=a(50012);function p(e){return function(e){return n.Children.map(e,(function(e){if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,a=e.children;return(0,n.useMemo)((function(){var e=null!=t?t:p(a);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,a=void 0!==t&&t,r=e.groupId,s=(0,i.k6)(),o=function(e){var t=e.queryString,a=void 0!==t&&t,r=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:a,groupId:r});return[(0,l._X)(o),(0,n.useCallback)((function(e){if(o){var t=new URLSearchParams(s.location.search);t.set(o,e),s.replace(Object.assign({},s.location,{search:t.toString()}))}}),[o,s])]}function g(e){var t,a,r,s,o=e.defaultValue,i=e.queryString,l=void 0!==i&&i,u=e.groupId,p=d(e),g=(0,n.useState)((function(){return function(e){var t,a=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var n=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:o,tabValues:p})})),b=g[0],f=g[1],y=h({queryString:l,groupId:u}),v=y[0],k=y[1],x=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),a=(0,c.Nk)(t),r=a[0],s=a[1],[r,(0,n.useCallback)((function(e){t&&s.set(e)}),[t,s])]),T=x[0],S=x[1],E=function(){var e=null!=v?v:T;return m({value:e,tabValues:p})?e:null}();return(0,n.useLayoutEffect)((function(){E&&f(E)}),[E]),{selectedValue:b,selectValue:(0,n.useCallback)((function(e){if(!m({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);f(e),k(e),S(e)}),[k,S,p]),tabValues:p}}var b=a(72389);const f="tabList__CuJ",y="tabItem_LNqP";function v(e){var t=e.className,a=e.block,i=e.selectedValue,l=e.selectValue,u=e.tabValues,c=[],p=(0,o.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==i&&(p(t),l(r))},m=function(e){var t,a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var r,n=c.indexOf(e.currentTarget)+1;a=null!=(r=c[n])?r:c[0];break;case"ArrowLeft":var s,o=c.indexOf(e.currentTarget)-1;a=null!=(s=c[o])?s:c[c.length-1]}null==(t=a)||t.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},u.map((function(e){var t=e.value,a=e.label,o=e.attributes;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return c.push(e)},onKeyDown:m,onClick:d},o,{className:(0,s.Z)("tabs__item",y,null==o?void 0:o.className,{"tabs__item--active":i===t})}),null!=a?a:t)})))}function k(e){var t=e.lazy,a=e.children,r=e.selectedValue;if(a=Array.isArray(a)?a:[a],t){var s=a.find((function(e){return e.props.value===r}));return s?(0,n.cloneElement)(s,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r})})))}function x(e){var t=g(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",f)},n.createElement(v,(0,r.Z)({},e,t)),n.createElement(k,(0,r.Z)({},e,t)))}function T(e){var t=(0,b.Z)();return n.createElement(x,(0,r.Z)({key:String(t)},e))}},84773:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var r=a(87462),n=a(63366),s=(a(67294),a(3905)),o=(a(1841),a(90346)),i=["components"],l={id:"storage",title:"State & Data Structures"},u=void 0,c={unversionedId:"develop/contracts/storage",id:"develop/contracts/storage",title:"State & Data Structures",description:"Each contract has its own state (storage), which only they can modify but anyone can see.",source:"@site/../docs/2.develop/contracts/storage.md",sourceDirName:"2.develop/contracts",slug:"/develop/contracts/storage",permalink:"/near-docs-kor/vi/develop/contracts/storage",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/storage.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"8 thg 2, 2023",frontMatter:{id:"storage",title:"State & Data Structures"},sidebar:"develop",previous:{title:"Environment",permalink:"/near-docs-kor/vi/develop/contracts/environment/"},next:{title:"Transfers & Actions",permalink:"/near-docs-kor/vi/develop/contracts/actions"}},p={},d=[{value:"Defining the State",id:"defining-the-state",level:2},{value:"Data Structures",id:"data-structures",level:2},{value:"Vector",id:"vector",level:3},{value:"Map",id:"map",level:3},{value:"Set",id:"set",level:3},{value:"Tree",id:"tree",level:3},{value:"Storage Cost",id:"storage-cost",level:2}],m={toc:d};function h(e){var t=e.components,a=(0,n.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Each contract has its own state (storage), which ",(0,s.kt)("strong",{parentName:"p"},"only they can modify")," but ",(0,s.kt)("a",{parentName:"p",href:"/near-docs-kor/vi/tools/near-cli#near-view-state-near-view-state"},"anyone can see"),"."),(0,s.kt)("p",null,"A contract stores all its data in a ",(0,s.kt)("inlineCode",{parentName:"p"},"key-value")," storage. This however is abstracted from you by the SDK through ",(0,s.kt)("a",{parentName:"p",href:"/near-docs-kor/vi/develop/contracts/serialization"},"serialization"),"."),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Contracts ",(0,s.kt)("a",{parentName:"p",href:"#storage-cost"},"pay for their storage")," by locking part of their balance. Currently it costs ",(0,s.kt)("strong",{parentName:"p"},"~1 \u24c3")," to store ",(0,s.kt)("strong",{parentName:"p"},"100KB"))),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"defining-the-state"},"Defining the State"),(0,s.kt)("p",null,"The contract's state is defined by the ",(0,s.kt)("a",{parentName:"p",href:"/near-docs-kor/vi/develop/contracts/anatomy#defining-the-contract"},"main class attributes"),", and accessed through them."),(0,s.kt)("p",null,"In the state you can store constants, native types, and complex objects. When in doubt, prefer to use ",(0,s.kt)("a",{parentName:"p",href:"#data-structures"},"SDK collections"),"\nover native ones, because they are optimized for the ",(0,s.kt)("a",{parentName:"p",href:"/near-docs-kor/vi/develop/contracts/serialization#borsh-state-serialization"},"serialized key-value storage"),"."),(0,s.kt)(o.O2,{mdxType:"CodeTabs"},(0,s.kt)(o.SQ,{value:"\ud83c\udf10 JavaScript",language:"js",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"index.js",url:"https://github.com/near-examples/docs-examples/blob/main/storage-js/src/index.ts",start:"6",end:"12",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/lib.rs",start:"14",end:"24",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/index.ts",start:"10",end:"29",mdxType:"Github"}))),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"data-structures"},"Data Structures"),(0,s.kt)("p",null,"The NEAR SDK exposes a series of structures (",(0,s.kt)("a",{parentName:"p",href:"#vector"},"Vectors"),", ",(0,s.kt)("a",{parentName:"p",href:"#set"},"Sets"),", ",(0,s.kt)("a",{parentName:"p",href:"#map"},"Maps")," and ",(0,s.kt)("a",{parentName:"p",href:"#tree"},"Trees"),")\nto simplify storing data in an efficient way."),(0,s.kt)("admonition",{title:"Instantiation",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"All structures need to be initialized using a ",(0,s.kt)("strong",{parentName:"p"},"unique ",(0,s.kt)("inlineCode",{parentName:"strong"},"prefix")),", which will be used to identify the structure's keys\nin the ",(0,s.kt)("a",{parentName:"p",href:"/near-docs-kor/vi/develop/contracts/serialization#borsh-state-serialization"},"serialized state")),(0,s.kt)(o.O2,{mdxType:"CodeTabs"},(0,s.kt)(o.SQ,{value:"\ud83c\udf10 JavaScript",language:"js",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"index.js",url:"https://github.com/near-examples/docs-examples/blob/main/storage-js/src/index.ts",start:"8",end:"11",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/lib.rs",start:"33",end:"38",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/index.ts",start:"5",end:"8",mdxType:"Github"})))),(0,s.kt)("hr",{class:"subsection"}),(0,s.kt)("h3",{id:"vector"},"Vector"),(0,s.kt)("p",null,"Implements a ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Array_data_structure"},"vector/array")," which persists in the contract's storage. Please refer to the Rust and AS SDK's for a full reference on their interfaces."),(0,s.kt)(o.O2,{mdxType:"CodeTabs"},(0,s.kt)(o.SQ,{value:"\ud83c\udf10 JavaScript",language:"js",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"index.js",url:"https://github.com/near-examples/docs-examples/blob/main/storage-js/src/index.ts",start:"25",end:"28",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"vector.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/vector.rs",start:"12",end:"30",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/lib.rs",start:"7",end:"24",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"vector.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/__tests__/vector.spec.ts",start:"4",end:"16",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/index.ts",start:"1",end:"11",mdxType:"Github"}))),(0,s.kt)("hr",{class:"subsection"}),(0,s.kt)("h3",{id:"map"},"Map"),(0,s.kt)("p",null,"Implements a ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Associative_array"},"map/dictionary")," which persists in the contract's storage. Please refer to the Rust and AS SDK's for a full reference on their interfaces."),(0,s.kt)(o.O2,{mdxType:"CodeTabs"},(0,s.kt)(o.SQ,{value:"\ud83c\udf10 JavaScript",language:"js",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"index.js",url:"https://github.com/near-examples/docs-examples/blob/main/storage-js/src/index.ts",start:"33",end:"37",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"map.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/map.rs",start:"9",end:"24",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/lib.rs",start:"7",end:"24",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"map.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/__tests__/map.spec.ts",start:"5",end:"15",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/index.ts",start:"1",end:"11",mdxType:"Github"}))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Nesting of Objects - Temporary Solution"),(0,s.kt)("p",null,"In the JS SDK, you can store and retrieve elements from a nested map or object, but first you need to construct or deconstruct the structure from state. This is a temporary solution until the improvements have been implemented to the SDK. Here is an example of how to do this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { NearBindgen, call, view, near, UnorderedMap } from "near-sdk-js";\n\n@NearBindgen({})\nclass StatusMessage {\n  records: UnorderedMap;\n  constructor() {\n    this.records = new UnorderedMap("a");\n  }\n\n  @call({})\n  set_status({ message, prefix }: { message: string; prefix: string }) {\n    let account_id = near.signerAccountId();\n\n    const inner: any = this.records.get("b" + prefix);\n    const inner_map: UnorderedMap = inner\n      ? UnorderedMap.deserialize(inner)\n      : new UnorderedMap("b" + prefix);\n\n    inner_map.set(account_id, message);\n\n    this.records.set("b" + prefix, inner_map);\n  }\n\n  @view({})\n  get_status({ account_id, prefix }: { account_id: string; prefix: string }) {\n    const inner: any = this.records.get("b" + prefix);\n    const inner_map: UnorderedMap = inner\n      ? UnorderedMap.deserialize(inner)\n      : new UnorderedMap("b" + prefix);\n    return inner_map.get(account_id);\n  }\n}\n'))),(0,s.kt)("hr",{class:"subsection"}),(0,s.kt)("h3",{id:"set"},"Set"),(0,s.kt)("p",null,"Implements a ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Set_(abstract_data_type)"},"set")," which persists in the contract's storage. Please refer to the Rust and AS SDK's for a full reference on their interfaces."),(0,s.kt)(o.O2,{mdxType:"CodeTabs"},(0,s.kt)(o.SQ,{value:"\ud83c\udf10 JavaScript",language:"js",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"index.js",url:"https://github.com/near-examples/docs-examples/blob/main/storage-js/src/index.ts",start:"42",end:"46",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"set.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/set.rs",start:"9",end:"16",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/lib.rs",start:"7",end:"24",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"map.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/__tests__/set.spec.ts",start:"5",end:"11",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/index.ts",start:"1",end:"11",mdxType:"Github"}))),(0,s.kt)("hr",{class:"subsection"}),(0,s.kt)("h3",{id:"tree"},"Tree"),(0,s.kt)("p",null,"An ordered equivalent of Map. The underlying implementation is based on an ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/AVL_tree"},"AVL"),". You should use this structure when you need to: have a consistent order, or access the min/max keys."),(0,s.kt)(o.O2,{mdxType:"CodeTabs"},(0,s.kt)(o.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"tree.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/tree.rs",start:"9",end:"24",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/docs-examples/blob/main/storage-rs/contract/src/lib.rs",start:"7",end:"24",mdxType:"Github"})),(0,s.kt)(o.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,s.kt)(o.Ey,{fname:"tree.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/__tests__/tree.spec.ts",start:"5",end:"11",mdxType:"Github"}),(0,s.kt)(o.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/storage-as/contract/assembly/index.ts",start:"1",end:"11",mdxType:"Github"}))),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"storage-cost"},"Storage Cost"),(0,s.kt)("p",null,"Your contract needs to lock a portion of their balance proportional to the amount of data they stored in the blockchain. This means that:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"If more data is added and the ",(0,s.kt)("strong",{parentName:"li"},"storage increases \u2191"),", then your contract's ",(0,s.kt)("strong",{parentName:"li"},"balance decreases \u2193"),"."),(0,s.kt)("li",{parentName:"ul"},"If data is deleted and the ",(0,s.kt)("strong",{parentName:"li"},"storage decreases \u2193"),", then your contract's ",(0,s.kt)("strong",{parentName:"li"},"balance increases \u2191"),". ")),(0,s.kt)("p",null,"Currently, it cost approximately ",(0,s.kt)("strong",{parentName:"p"},"1 \u24c3")," to store ",(0,s.kt)("strong",{parentName:"p"},"100kb")," of data."),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"An error will raise if your contract tries to increase its state while not having NEAR to cover for storage.")),(0,s.kt)("admonition",{type:"warning"},(0,s.kt)("p",{parentName:"admonition"},"Be mindful of potential ",(0,s.kt)("a",{parentName:"p",href:"/near-docs-kor/vi/develop/contracts/security/storage"},"small deposit attacks"))))}h.isMDXComponent=!0}}]);