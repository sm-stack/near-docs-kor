"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8114],{90346:(e,t,a)=>{a.d(t,{Ey:()=>d,O2:()=>c,SQ:()=>p});var n=a(67294),r=a(74866),l=a(85162),i=a(1841),s=a.n(i),u=a(95665),o=a.n(u);function c(e){var t=e.children;return Array.isArray(t)||(t=[t]),n.createElement(r.Z,{className:"language-tabs",groupId:"code-tabs"},t.map((function(e,t){return n.createElement(l.Z,{value:e.props.value,label:e.props.value},e)})))}function p(e){var t=e.children,a=e.language;return Array.isArray(t)||(t=[t]),t=t.map((function(e){return function(e,t){var a=e.props,r=a.children,l=a.url,i=a.start,u=a.end,o=a.fname;if("Github"==e.props.mdxType)return d({url:l,start:i,end:u,language:t,fname:o});if("CodeBlock"==e.props.mdxType)return n.createElement(s(),{fname:o,language:t},r);return e}(e,a)})),1==t.length?n.createElement(l.Z,{value:0,label:t[0].props.fname},t[0]):n.createElement(r.Z,{className:"file-tabs"},t.map((function(e,t){return n.createElement(l.Z,{value:t,label:e.props.fname},e)})))}function d(e){var t=e.url,a=e.start,r=e.end,l=e.language,i=e.fname,s=t+"#";return a&&r&&(s+="L"+a+"-L"+r+"#"),n.createElement(o(),{language:l,fname:i},s)}},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function i(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>x});var n=a(87462),r=a(67294),l=a(86010),i=a(12466),s=a(76775),u=a(91980),o=a(67392),c=a(50012);function p(e){return function(e){return r.Children.map(e,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:p(a);return function(e){var t=(0,o.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,l=(0,s.k6)(),i=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,u._X)(i),(0,r.useCallback)((function(e){if(i){var t=new URLSearchParams(l.location.search);t.set(i,e),l.replace(Object.assign({},l.location,{search:t.toString()}))}}),[i,l])]}function g(e){var t,a,n,l,i=e.defaultValue,s=e.queryString,u=void 0!==s&&s,o=e.groupId,p=d(e),g=(0,r.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:i,tabValues:p})})),f=g[0],v=g[1],b=h({queryString:u,groupId:o}),k=b[0],y=b[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:o}.groupId),a=(0,c.Nk)(t),n=a[0],l=a[1],[n,(0,r.useCallback)((function(e){t&&l.set(e)}),[t,l])]),x=w[0],N=w[1],T=function(){var e=null!=k?k:x;return m({value:e,tabValues:p})?e:null}();return(0,r.useLayoutEffect)((function(){T&&v(T)}),[T]),{selectedValue:f,selectValue:(0,r.useCallback)((function(e){if(!m({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);v(e),y(e),N(e)}),[y,N,p]),tabValues:p}}var f=a(72389);const v="tabList__CuJ",b="tabItem_LNqP";function k(e){var t=e.className,a=e.block,s=e.selectedValue,u=e.selectValue,o=e.tabValues,c=[],p=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,a=c.indexOf(t),n=o[a].value;n!==s&&(p(t),u(n))},m=function(e){var t,a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var n,r=c.indexOf(e.currentTarget)+1;a=null!=(n=c[r])?n:c[0];break;case"ArrowLeft":var l,i=c.indexOf(e.currentTarget)-1;a=null!=(l=c[i])?l:c[c.length-1]}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},o.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:function(e){return c.push(e)},onKeyDown:m,onClick:d},i,{className:(0,l.Z)("tabs__item",b,null==i?void 0:i.className,{"tabs__item--active":s===t})}),null!=a?a:t)})))}function y(e){var t=e.lazy,a=e.children,n=e.selectedValue;if(a=Array.isArray(a)?a:[a],t){var l=a.find((function(e){return e.props.value===n}));return l?(0,r.cloneElement)(l,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function w(e){var t=g(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",v)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function x(e){var t=(0,f.Z)();return r.createElement(w,(0,n.Z)({key:String(t)},e))}},24913:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>u,metadata:()=>c,toc:()=>d});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),i=(a(74866),a(85162),a(90346)),s=["components"],u={id:"update-contract-migrate-state",title:"Self Upgrade & State Migration"},o=void 0,c={unversionedId:"tutorials/examples/update-contract-migrate-state",id:"tutorials/examples/update-contract-migrate-state",title:"Self Upgrade & State Migration",description:"Three examples on how to handle updates and state migration:",source:"@site/../docs/3.tutorials/examples/update.md",sourceDirName:"3.tutorials/examples",slug:"/tutorials/examples/update-contract-migrate-state",permalink:"/near-docs-kor/zh-CN/tutorials/examples/update-contract-migrate-state",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/examples/update.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"2023\u5e742\u67088\u65e5",frontMatter:{id:"update-contract-migrate-state",title:"Self Upgrade & State Migration"},sidebar:"tutorials",previous:{title:"Complex Cross Contract Call",permalink:"/near-docs-kor/zh-CN/tutorials/examples/advanced-xcc"},next:{title:"Fungible Tokens",permalink:"/near-docs-kor/zh-CN/develop/relevant-contracts/ft"}},p={},d=[{value:"State Migration",id:"state-migration",level:2},{value:"The Migration Method",id:"the-migration-method",level:4},{value:"State Versioning",id:"state-versioning",level:2},{value:"Self Update",id:"self-update",level:2}],m={toc:d};function h(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Three examples on how to handle updates and ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/zh-CN/develop/upgrade"},"state migration"),":"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/near-examples/update-migrate-rust/tree/main/contracts/basic-updates"},"State Migration"),": How to implement a ",(0,l.kt)("inlineCode",{parentName:"li"},"migrate")," method to migrate state between contract updates."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/near-examples/update-migrate-rust/tree/main/contracts/enum-updates"},"State Versioning"),": How to use readily use versioning on a state, to simplify updating it later."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/near-examples/update-migrate-rust/tree/main/contracts/self-updates"},"Self Update"),": How to implement a contract that can update itself.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"state-migration"},"State Migration"),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near-examples/update-migrate-rust/tree/main/contracts/basic-updates"},"State Migration example")," shows how to handle state-breaking changes\nbetween contract updates."),(0,l.kt)("p",null,"It is composed by 2 contracts:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Base: A Guest Book were people can write messages."),(0,l.kt)("li",{parentName:"ol"},"Update: An update in which we remove a parameter and change the internal structure.")),(0,l.kt)(i.O2,{mdxType:"CodeTabs"},(0,l.kt)(i.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(i.Ey,{fname:"migrate.rs",url:"https://github.com/near-examples/update-migrate-rust/blob/main/contracts/basic-updates/update/src/migrate.rs",start:"20",end:"44",mdxType:"Github"}))),(0,l.kt)("h4",{id:"the-migration-method"},"The Migration Method"),(0,l.kt)("p",null,"The migration method deserializes the current state (",(0,l.kt)("inlineCode",{parentName:"p"},"OldState"),") and iterates through the messages, updating them\nto the new ",(0,l.kt)("inlineCode",{parentName:"p"},"PostedMessage")," that includes the ",(0,l.kt)("inlineCode",{parentName:"p"},"payment")," field."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Notice that migrate is actually an ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/zh-CN/develop/contracts/anatomy#initialization-method"},"initialization method")," that ignores the existing state (","[#init(ignore_state)]","), thus being able to execute and rewrite the state.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"state-versioning"},"State Versioning"),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near-examples/update-migrate-rust/tree/main/contracts/enum-updates"},"State Versioning example")," shows how to use\n",(0,l.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/book/ch06-01-defining-an-enum.html"},"Enums")," to implement state versioning on a contract."),(0,l.kt)("p",null,"Versioning simplifies updating the contract since you only need to add a new new version of the structure.\nAll versions can coexist, thus you will not need to change previously existing structures. "),(0,l.kt)("p",null,"The example is composed by 2 contracts:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Base: The Guest Book contract using versioned ",(0,l.kt)("inlineCode",{parentName:"li"},"PostedMessages")," (",(0,l.kt)("inlineCode",{parentName:"li"},"PostedMessagesV1"),")."),(0,l.kt)("li",{parentName:"ol"},"Update: An update that adds a new version of ",(0,l.kt)("inlineCode",{parentName:"li"},"PostedMessages")," (",(0,l.kt)("inlineCode",{parentName:"li"},"PostedMessagesV2"),").")),(0,l.kt)(i.O2,{mdxType:"CodeTabs"},(0,l.kt)(i.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(i.Ey,{fname:"versioned_msg.rs",url:"https://github.com/near-examples/update-migrate-rust/blob/main/contracts/enum-updates/update/src/versioned_msg.rs",start:"22",end:"40",mdxType:"Github"}))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"self-update"},"Self Update"),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near-examples/update-migrate-rust/tree/main/contracts/self-updates"},"Self Update example")," shows how to implement a contract\nthat can update itself."),(0,l.kt)("p",null,"It is composed by 2 contracts:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Base: A Guest Book were people can write messages, implementing a ",(0,l.kt)("inlineCode",{parentName:"li"},"update_contract")," method."),(0,l.kt)("li",{parentName:"ol"},"Update: An update in which we remove a parameter and change the internal structure.")),(0,l.kt)(i.O2,{mdxType:"CodeTabs"},(0,l.kt)(i.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(i.Ey,{fname:"update.rs",url:"https://github.com/near-examples/update-migrate-rust/blob/main/contracts/self-updates/base/src/update.rs",start:"10",end:"28",mdxType:"Github"}))))}h.isMDXComponent=!0}}]);