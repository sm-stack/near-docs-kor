"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[993],{90346:(t,e,n)=>{n.d(e,{Ey:()=>c,O2:()=>d,SQ:()=>p});var a=n(67294),r=n(74866),o=n(85162),i=n(1841),l=n.n(i),s=n(95665),u=n.n(s);function d(t){var e=t.children;return Array.isArray(e)||(e=[e]),a.createElement(r.Z,{className:"language-tabs",groupId:"code-tabs"},e.map((function(t,e){return a.createElement(o.Z,{value:t.props.value,label:t.props.value},t)})))}function p(t){var e=t.children,n=t.language;return Array.isArray(e)||(e=[e]),e=e.map((function(t){return function(t,e){var n=t.props,r=n.children,o=n.url,i=n.start,s=n.end,u=n.fname;if("Github"==t.props.mdxType)return c({url:o,start:i,end:s,language:e,fname:u});if("CodeBlock"==t.props.mdxType)return a.createElement(l(),{fname:u,language:e},r);return t}(t,n)})),1==e.length?a.createElement(o.Z,{value:0,label:e[0].props.fname},e[0]):a.createElement(r.Z,{className:"file-tabs"},e.map((function(t,e){return a.createElement(o.Z,{value:e,label:t.props.fname},t)})))}function c(t){var e=t.url,n=t.start,r=t.end,o=t.language,i=t.fname,l=e+"#";return n&&r&&(l+="L"+n+"-L"+r+"#"),a.createElement(u(),{language:o,fname:i},l)}},85162:(t,e,n)=>{n.d(e,{Z:()=>i});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function i(t){var e=t.children,n=t.hidden,i=t.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},e)}},74866:(t,e,n)=>{n.d(e,{Z:()=>x});var a=n(87462),r=n(67294),o=n(86010),i=n(12466),l=n(76775),s=n(91980),u=n(67392),d=n(50012);function p(t){return function(t){return r.Children.map(t,(function(t){if((0,r.isValidElement)(t)&&"value"in t.props)return t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof t.type?t.type:t.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(t).map((function(t){var e=t.props;return{value:e.value,label:e.label,attributes:e.attributes,default:e.default}}))}function c(t){var e=t.values,n=t.children;return(0,r.useMemo)((function(){var t=null!=e?e:p(n);return function(t){var e=(0,u.l)(t,(function(t,e){return t.value===e.value}));if(e.length>0)throw new Error('Docusaurus error: Duplicate values "'+e.map((function(t){return t.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(t),t}),[e,n])}function m(t){var e=t.value;return t.tabValues.some((function(t){return t.value===e}))}function h(t){var e=t.queryString,n=void 0!==e&&e,a=t.groupId,o=(0,l.k6)(),i=function(t){var e=t.queryString,n=void 0!==e&&e,a=t.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,s._X)(i),(0,r.useCallback)((function(t){if(i){var e=new URLSearchParams(o.location.search);e.set(i,t),o.replace(Object.assign({},o.location,{search:e.toString()}))}}),[i,o])]}function g(t){var e,n,a,o,i=t.defaultValue,l=t.queryString,s=void 0!==l&&l,u=t.groupId,p=c(t),g=(0,r.useState)((function(){return function(t){var e,n=t.defaultValue,a=t.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(t){return t.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(e=a.find((function(t){return t.default})))?e:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:i,tabValues:p})})),b=g[0],f=g[1],k=h({queryString:s,groupId:u}),v=k[0],y=k[1],w=(e=function(t){return t?"docusaurus.tab."+t:null}({groupId:u}.groupId),n=(0,d.Nk)(e),a=n[0],o=n[1],[a,(0,r.useCallback)((function(t){e&&o.set(t)}),[e,o])]),x=w[0],N=w[1],T=function(){var t=null!=v?v:x;return m({value:t,tabValues:p})?t:null}();return(0,r.useLayoutEffect)((function(){T&&f(T)}),[T]),{selectedValue:b,selectValue:(0,r.useCallback)((function(t){if(!m({value:t,tabValues:p}))throw new Error("Can't select invalid tab value="+t);f(t),y(t),N(t)}),[y,N,p]),tabValues:p}}var b=n(72389);const f="tabList__CuJ",k="tabItem_LNqP";function v(t){var e=t.className,n=t.block,l=t.selectedValue,s=t.selectValue,u=t.tabValues,d=[],p=(0,i.o5)().blockElementScrollPositionUntilNextRender,c=function(t){var e=t.currentTarget,n=d.indexOf(e),a=u[n].value;a!==l&&(p(e),s(a))},m=function(t){var e,n=null;switch(t.key){case"Enter":c(t);break;case"ArrowRight":var a,r=d.indexOf(t.currentTarget)+1;n=null!=(a=d[r])?a:d[0];break;case"ArrowLeft":var o,i=d.indexOf(t.currentTarget)-1;n=null!=(o=d[i])?o:d[d.length-1]}null==(e=n)||e.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},e)},u.map((function(t){var e=t.value,n=t.label,i=t.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===e?0:-1,"aria-selected":l===e,key:e,ref:function(t){return d.push(t)},onKeyDown:m,onClick:c},i,{className:(0,o.Z)("tabs__item",k,null==i?void 0:i.className,{"tabs__item--active":l===e})}),null!=n?n:e)})))}function y(t){var e=t.lazy,n=t.children,a=t.selectedValue;if(n=Array.isArray(n)?n:[n],e){var o=n.find((function(t){return t.props.value===a}));return o?(0,r.cloneElement)(o,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map((function(t,e){return(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==a})})))}function w(t){var e=g(t);return r.createElement("div",{className:(0,o.Z)("tabs-container",f)},r.createElement(v,(0,a.Z)({},t,e)),r.createElement(y,(0,a.Z)({},t,e)))}function x(t){var e=(0,b.Z)();return r.createElement(w,(0,a.Z)({key:String(e)},t))}},40075:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>p,default:()=>b,frontMatter:()=>d,metadata:()=>c,toc:()=>h});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=n(74866),l=n(85162),s=n(90346),u=["components"],d={id:"donation",title:"Donation"},p=void 0,c={unversionedId:"tutorials/examples/donation",id:"tutorials/examples/donation",title:"Donation",description:"Our donation example enables to forward money to an account while keeping track of it.",source:"@site/../docs/3.tutorials/examples/donation.md",sourceDirName:"3.tutorials/examples",slug:"/tutorials/examples/donation",permalink:"/near-docs-kor/zh-CN/tutorials/examples/donation",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/examples/donation.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"2023\u5e742\u67088\u65e5",frontMatter:{id:"donation",title:"Donation"},sidebar:"tutorials",previous:{title:"Guest Book",permalink:"/near-docs-kor/zh-CN/tutorials/examples/guest-book"},next:{title:"Cross Contract Call",permalink:"/near-docs-kor/zh-CN/tutorials/examples/xcc"}},m={},h=[{value:"Starting the Donation Example",id:"starting-the-donation-example",level:2},{value:"Interacting With the dApp",id:"interacting-with-the-dapp",level:2},{value:"Structure of a dApp",id:"structure-of-a-dapp",level:2},{value:"Contract",id:"contract",level:3},{value:"Frontend",id:"frontend",level:3},{value:"Testing",id:"testing",level:2},{value:"Unit test",id:"unit-test",level:3},{value:"Integration test",id:"integration-test",level:3},{value:"Moving Forward",id:"moving-forward",level:2}],g={toc:h};function b(t){var e=t.components,d=(0,r.Z)(t,u);return(0,o.kt)("wrapper",(0,a.Z)({},g,d,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Our donation example enables to forward money to an account while keeping track of it.\nIt is one of the simplest examples on making a contract receive and send money, and the\nperfect gateway to enter the world of decentralized finance."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:n(12257).Z,width:"1139",height:"479"})),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"starting-the-donation-example"},"Starting the Donation Example"),(0,o.kt)("p",null,"You have two options to start the Donation Example. The first and recommended is to use the app through Gitpod, which will open a web-based interactive environment. The second option is to clone the repository locally, for which you will need to install all the ",(0,o.kt)("a",{parentName:"p",href:"/near-docs-kor/zh-CN/develop/prerequisites"},"Prerequisites"),"."),(0,o.kt)(i.Z,{className:"language-tabs",groupId:"code-tabs",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"\ud83c\udf10 JavaScript",mdxType:"TabItem"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Gitpod"),(0,o.kt)("th",{parentName:"tr",align:null},"Clone locally"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{href:"https://gitpod.io/#https://github.com/near-examples/donation-js"},(0,o.kt)("img",{src:"https://gitpod.io/button/open-in-gitpod.svg",alt:"Open in Gitpod"}))),(0,o.kt)("td",{parentName:"tr",align:null},"\ud83c\udf10 ",(0,o.kt)("inlineCode",{parentName:"td"},"https://github.com/near-examples/donation-js.git")))))),(0,o.kt)(l.Z,{value:"\ud83e\udd80 Rust",mdxType:"TabItem"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Gitpod"),(0,o.kt)("th",{parentName:"tr",align:null},"Clone locally"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{href:"https://gitpod.io/#https://github.com/near-examples/donation-rust"},(0,o.kt)("img",{src:"https://gitpod.io/button/open-in-gitpod.svg",alt:"Open in Gitpod"}))),(0,o.kt)("td",{parentName:"tr",align:null},"\ud83e\udd80 ",(0,o.kt)("inlineCode",{parentName:"td"},"https://github.com/near-examples/donation-rust.git")))))),(0,o.kt)(l.Z,{value:"\ud83d\ude80 AssemblyScript",mdxType:"TabItem"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Gitpod"),(0,o.kt)("th",{parentName:"tr",align:null},"Clone locally"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{href:"https://gitpod.io/#https://github.com/near-examples/docs-examples/blob/main/donation-as"},(0,o.kt)("img",{src:"https://gitpod.io/button/open-in-gitpod.svg",alt:"Open in Gitpod"}))),(0,o.kt)("td",{parentName:"tr",align:null},"\ud83d\ude80 ",(0,o.kt)("inlineCode",{parentName:"td"},"https://github.com/near-examples/docs-examples")," -> donation-as")))))),(0,o.kt)("p",null,"If you choose Gitpod a new browser window will open automatically with the code. The project will compile and eventually the frontend will open in a new window/tab (make sure the pop-up window is not blocked)."),(0,o.kt)("p",null,"If you are running the app locally, enter the directory where you cloned it and use ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn")," to install dependencies, and ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn start")," to start it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd donation\nyarn\nyarn deploy\nyarn start\n")),(0,o.kt)("p",null,"Your contract will then be ",(0,o.kt)("strong",{parentName:"p"},"compiled")," and ",(0,o.kt)("strong",{parentName:"p"},"deployed")," to an ",(0,o.kt)("strong",{parentName:"p"},"account")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"testnet")," network. When done, a browser window should open."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"interacting-with-the-dapp"},"Interacting With the dApp"),(0,o.kt)("p",null,'Go ahead and login with your NEAR account. If you don\'t have one, you will be able to create one in the moment. Once logged in, input the amount of NEAR you want\nto donate and press the donate button. You will be redirected to the NEAR Wallet to confirm the transaction. After confirming it, the donation will be listed\nin the "Latest Donations".'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:n(12257).Z,width:"1139",height:"479"}),"\n",(0,o.kt)("em",{parentName:"p"},"Frontend of the Donation App")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"structure-of-a-dapp"},"Structure of a dApp"),(0,o.kt)("p",null,"Now that you understand what the dApp does, let us take a closer look to its structure:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The frontend code lives in the ",(0,o.kt)("inlineCode",{parentName:"li"},"/frontend")," folder."),(0,o.kt)("li",{parentName:"ol"},"The smart contract code is in the ",(0,o.kt)("inlineCode",{parentName:"li"},"/contract")," folder.")),(0,o.kt)("h3",{id:"contract"},"Contract"),(0,o.kt)("p",null,"The contract exposes methods to donate money (",(0,o.kt)("inlineCode",{parentName:"p"},"donate"),"), and methods to retrieve the recorded donations (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"get_donation_by_number"),")."),(0,o.kt)(s.O2,{mdxType:"CodeTabs"},(0,o.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"ts",mdxType:"Language"},(0,o.kt)(s.Ey,{fname:"contract.ts",url:"https://github.com/near-examples/donation-js/blob/master/contract/src/contract.ts",start:"16",end:"44",mdxType:"Github"})),(0,o.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,o.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/donation-rust/blob/main/contract/src/donation.rs",start:"21",end:"50",mdxType:"Github"})),(0,o.kt)(s.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,o.kt)(s.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/donation-as/contract/assembly/index.ts",start:"11",end:"34",mdxType:"Github"}))),(0,o.kt)("h3",{id:"frontend"},"Frontend"),(0,o.kt)("p",null,"The frontend is composed by a single HTML file (",(0,o.kt)("inlineCode",{parentName:"p"},"/index.html"),"). This file defines the components displayed in the screen.\nThe website's logic lives in ",(0,o.kt)("inlineCode",{parentName:"p"},"/assets/js/index.js"),", which communicates with the contract through ",(0,o.kt)("inlineCode",{parentName:"p"},"/assets/js/near/utils.js"),"."),(0,o.kt)("p",null,"An interesting aspect of the donation example is that it showcases how to retrieve a result after being redirected to the\nNEAR wallet to accept a transaction."),(0,o.kt)(s.O2,{mdxType:"CodeTabs"},(0,o.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"js",mdxType:"Language"},(0,o.kt)(s.Ey,{fname:"index.js",url:"https://github.com/near-examples/donation-js/blob/master/frontend/index.js",start:"74",end:"81",mdxType:"Github"}),(0,o.kt)(s.Ey,{fname:"near-interface.js",url:"https://github.com/near-examples/donation-js/blob/master/frontend/near-interface.js",start:"29",end:"32",mdxType:"Github"}),(0,o.kt)(s.Ey,{fname:"near-wallet.js",url:"https://github.com/near-examples/donation-js/blob/master/frontend/near-wallet.js",start:"105",end:"113",mdxType:"Github"}))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"testing"},"Testing"),(0,o.kt)("p",null,"When writing smart contracts it is very important to test all methods exhaustively. In this\nproject you have two types of tests: unit and integration. Before digging in them,\ngo ahead and perform the tests present in the dApp through the command ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn test"),"."),(0,o.kt)("h3",{id:"unit-test"},"Unit test"),(0,o.kt)("p",null,"Unit tests check individual functions in the smart contract. They are written in the\nsame language as the smart contract is. "),(0,o.kt)(s.O2,{mdxType:"CodeTabs"},(0,o.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,o.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/donation-rust/blob/main/contract/src/lib.rs",start:"63",end:"92",mdxType:"Github"})),(0,o.kt)(s.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,o.kt)(s.Ey,{fname:"main.spec.ts",url:"https://github.com/near-examples/docs-examples/blob/main/donation-as/contract/assembly/__tests__/donation.spec.ts",start:"16",end:"43",mdxType:"Github"}))),(0,o.kt)("h3",{id:"integration-test"},"Integration test"),(0,o.kt)("p",null,"Integration tests are generally written in javascript. They automatically deploy a new\ncontract and execute methods on it. In this way, integration tests simulate interactions\nfrom users in a realistic scenario. You will find the integration tests\nin ",(0,o.kt)("inlineCode",{parentName:"p"},"tests/integration-tests"),"."),(0,o.kt)(s.O2,{mdxType:"CodeTabs"},(0,o.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"rust",mdxType:"Language"},(0,o.kt)(s.Ey,{fname:"main.test.js",url:"https://github.com/near-examples/donation-js/blob/master/integration-tests/src/main.ava.ts",start:"50",end:"73",mdxType:"Github"}))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"moving-forward"},"Moving Forward"),(0,o.kt)("p",null,"A nice way to learn is by trying to expand a contract. Modify the donation example so it accumulates the money in the contract\ninstead of sending it immediately. Then, make a method that only the ",(0,o.kt)("inlineCode",{parentName:"p"},"beneficiary")," can call to retrieve the money."))}b.isMDXComponent=!0},12257:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/donation-7cf65e5e131274fd1ae9aa34bc465bb8.png"}}]);