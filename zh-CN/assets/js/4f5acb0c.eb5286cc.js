"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9853],{90346:(e,t,a)=>{a.d(t,{Ey:()=>m,O2:()=>u,SQ:()=>d});var n=a(67294),r=a(74866),l=a(85162),o=a(1841),s=a.n(o),c=a(95665),i=a.n(c);function u(e){var t=e.children;return Array.isArray(t)||(t=[t]),n.createElement(r.Z,{className:"language-tabs",groupId:"code-tabs"},t.map((function(e,t){return n.createElement(l.Z,{value:e.props.value,label:e.props.value},e)})))}function d(e){var t=e.children,a=e.language;return Array.isArray(t)||(t=[t]),t=t.map((function(e){return function(e,t){var a=e.props,r=a.children,l=a.url,o=a.start,c=a.end,i=a.fname;if("Github"==e.props.mdxType)return m({url:l,start:o,end:c,language:t,fname:i});if("CodeBlock"==e.props.mdxType)return n.createElement(s(),{fname:i,language:t},r);return e}(e,a)})),1==t.length?n.createElement(l.Z,{value:0,label:t[0].props.fname},t[0]):n.createElement(r.Z,{className:"file-tabs"},t.map((function(e,t){return n.createElement(l.Z,{value:t,label:e.props.fname},e)})))}function m(e){var t=e.url,a=e.start,r=e.end,l=e.language,o=e.fname,s=t+"#";return a&&r&&(s+="L"+a+"-L"+r+"#"),n.createElement(i(),{language:l,fname:o},s)}},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(87462),r=a(67294),l=a(86010),o=a(12466),s=a(76775),c=a(91980),i=a(67392),u=a(50012);function d(e){return function(e){return r.Children.map(e,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:d(a);return function(e){var t=(0,i.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function p(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,l=(0,s.k6)(),o=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,c._X)(o),(0,r.useCallback)((function(e){if(o){var t=new URLSearchParams(l.location.search);t.set(o,e),l.replace(Object.assign({},l.location,{search:t.toString()}))}}),[o,l])]}function k(e){var t,a,n,l,o=e.defaultValue,s=e.queryString,c=void 0!==s&&s,i=e.groupId,d=m(e),k=(0,r.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:d})})),b=k[0],g=k[1],y=h({queryString:c,groupId:i}),f=y[0],v=y[1],x=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:i}.groupId),a=(0,u.Nk)(t),n=a[0],l=a[1],[n,(0,r.useCallback)((function(e){t&&l.set(e)}),[t,l])]),N=x[0],T=x[1],w=function(){var e=null!=f?f:N;return p({value:e,tabValues:d})?e:null}();return(0,r.useLayoutEffect)((function(){w&&g(w)}),[w]),{selectedValue:b,selectValue:(0,r.useCallback)((function(e){if(!p({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);g(e),v(e),T(e)}),[v,T,d]),tabValues:d}}var b=a(72389);const g="tabList__CuJ",y="tabItem_LNqP";function f(e){var t=e.className,a=e.block,s=e.selectedValue,c=e.selectValue,i=e.tabValues,u=[],d=(0,o.o5)().blockElementScrollPositionUntilNextRender,m=function(e){var t=e.currentTarget,a=u.indexOf(t),n=i[a].value;n!==s&&(d(t),c(n))},p=function(e){var t,a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var n,r=u.indexOf(e.currentTarget)+1;a=null!=(n=u[r])?n:u[0];break;case"ArrowLeft":var l,o=u.indexOf(e.currentTarget)-1;a=null!=(l=u[o])?l:u[u.length-1]}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},i.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:function(e){return u.push(e)},onKeyDown:p,onClick:m},o,{className:(0,l.Z)("tabs__item",y,null==o?void 0:o.className,{"tabs__item--active":s===t})}),null!=a?a:t)})))}function v(e){var t=e.lazy,a=e.children,n=e.selectedValue;if(a=Array.isArray(a)?a:[a],t){var l=a.find((function(e){return e.props.value===n}));return l?(0,r.cloneElement)(l,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function x(e){var t=k(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g)},r.createElement(f,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function N(e){var t=(0,b.Z)();return r.createElement(x,(0,n.Z)({key:String(t)},e))}},294:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>k,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),o=a(1841),s=a(90346),c=["components"],i={id:"crosscontract",title:"Cross-Contract Calls"},u=void 0,d={unversionedId:"develop/contracts/crosscontract",id:"develop/contracts/crosscontract",title:"Cross-Contract Calls",description:"Cross-contract calls allow your contract to interact with other deployed contracts. This is useful for:",source:"@site/../docs/2.develop/contracts/crosscontract.md",sourceDirName:"2.develop/contracts",slug:"/develop/contracts/crosscontract",permalink:"/near-docs-kor/zh-CN/develop/contracts/crosscontract",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/crosscontract.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"2023\u5e742\u67088\u65e5",frontMatter:{id:"crosscontract",title:"Cross-Contract Calls"},sidebar:"develop",previous:{title:"Transfers & Actions",permalink:"/near-docs-kor/zh-CN/develop/contracts/actions"},next:{title:"\u2705 Checklist",permalink:"/near-docs-kor/zh-CN/develop/contracts/security/checklist"}},m={},p=[{value:"Cross-Contract Calls are <strong>Independent</strong>",id:"cross-contract-calls-are-independent",level:4},{value:"Cross-Contract Calls are <strong>Asynchronous</strong>",id:"cross-contract-calls-are-asynchronous",level:4},{value:"Snippet: Querying Information",id:"snippet-querying-information",level:2},{value:"Snippet: Sending Information",id:"snippet-sending-information",level:2},{value:"Promises",id:"promises",level:2},{value:"Callback Method",id:"callback-method",level:2},{value:"Checking Execution Status",id:"checking-execution-status",level:3},{value:"Successful Execution",id:"successful-execution",level:3},{value:"Failed Execution",id:"failed-execution",level:3},{value:"Security Concerns",id:"security-concerns",level:2}],h={toc:p};function k(e){var t=e.components,a=(0,r.Z)(e,c);return(0,l.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Cross-contract calls allow your contract to interact with other deployed contracts. This is useful for:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Querying information from another contract."),(0,l.kt)("li",{parentName:"ol"},"Executing a method in another contract.")),(0,l.kt)("h4",{id:"cross-contract-calls-are-independent"},"Cross-Contract Calls are ",(0,l.kt)("strong",{parentName:"h4"},"Independent")),(0,l.kt)("p",null,"The method in which you make the call and the method in which you receive the result are different."),(0,l.kt)("h4",{id:"cross-contract-calls-are-asynchronous"},"Cross-Contract Calls are ",(0,l.kt)("strong",{parentName:"h4"},"Asynchronous")),(0,l.kt)("p",null,"There is a delay between the call and the callback in which everyone can still interact with your contract."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"snippet-querying-information"},"Snippet: Querying Information"),(0,l.kt)("p",null,"While making your contract, it is likely that you will want to query information from another contract. Below, you can see a basic example in which we query the greeting message from our ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/zh-CN/develop/quickstart-guide"},"Hello NEAR")," example."),(0,l.kt)(s.O2,{mdxType:"CodeTabs"},(0,l.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"contract.ts",url:"https://github.com/near-examples/cross-contract-hello-js/blob/master/contract/src/contract.ts",start:"17",end:"39",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/cross-contract-hello-rust/blob/main/contract/src/lib.rs",start:"24",end:"49",mdxType:"Github"}),(0,l.kt)(s.Ey,{fname:"external.rs",url:"https://github.com/near-examples/cross-contract-hello-rust/blob/main/contract/src/external.rs",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/cross-contract-hello-as/contract/assembly/index.ts",start:"10",end:"45",mdxType:"Github"}),(0,l.kt)(s.Ey,{fname:"external.ts",url:"https://github.com/near-examples/docs-examples/blob/main/cross-contract-hello-as/contract/assembly/external.ts",mdxType:"Github"}))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"snippet-sending-information"},"Snippet: Sending Information"),(0,l.kt)("p",null,"Calling another contract passing information is also a common scenario. Bellow you can see a method that interacts with the ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/zh-CN/develop/quickstart-guide"},"Hello NEAR")," example to change its greeting message."),(0,l.kt)(s.O2,{mdxType:"CodeTabs"},(0,l.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"contract.ts",url:"https://github.com/near-examples/cross-contract-hello-js/blob/master/contract/src/contract.ts",start:"41",end:"64",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/cross-contract-hello-rust/blob/main/contract/src/lib.rs",start:"51",end:"74",mdxType:"Github"}),(0,l.kt)(s.Ey,{fname:"external.rs",url:"https://github.com/near-examples/cross-contract-hello-rust/blob/main/contract/src/external.rs",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/cross-contract-hello-as/contract/assembly/index.ts",start:"47",end:"79",mdxType:"Github"}),(0,l.kt)(s.Ey,{fname:"external.ts",url:"https://github.com/near-examples/docs-examples/blob/main/cross-contract-hello-as/contract/assembly/external.ts",mdxType:"Github"}))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"promises"},"Promises"),(0,l.kt)("p",null,"Cross-contract calls work by creating two promises in the network:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"A promise to execute code in the external contract (",(0,l.kt)("inlineCode",{parentName:"li"},"Promise.create"),")."),(0,l.kt)("li",{parentName:"ol"},"A promise to call back a ",(0,l.kt)("strong",{parentName:"li"},"different")," method in your contract with the result (",(0,l.kt)("inlineCode",{parentName:"li"},"Promise.then"),").")),(0,l.kt)("p",null,"Both promises take the same arguments:"),(0,l.kt)(s.O2,{mdxType:"CodeTabs"},(0,l.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"ts",mdxType:"Language"},(0,l.kt)(o.CodeBlock,{mdxType:"CodeBlock"},'NearPromise.new("external_address").functionCall("method", bytes(JSON.stringify(arguments)), DEPOSIT, GAS);')),(0,l.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(o.CodeBlock,{mdxType:"CodeBlock"},'external_trait::ext("external_address") .with_attached_deposit(DEPOSIT) .with_static_gas(GAS) .method(arguments);')),(0,l.kt)(s.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,l.kt)(o.CodeBlock,{mdxType:"CodeBlock"},'ContractPromise.create( "external_address", "method", "encoded_arguments", GAS, DEPOSIT )'))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The address of the contract you want to interact with"),(0,l.kt)("li",{parentName:"ul"},"The method that you want to execute"),(0,l.kt)("li",{parentName:"ul"},"The (",(0,l.kt)("strong",{parentName:"li"},"encoded"),") arguments to pass to the method"),(0,l.kt)("li",{parentName:"ul"},"The amount of GAS to use (deducted from the ",(0,l.kt)("strong",{parentName:"li"},"attached Gas"),")"),(0,l.kt)("li",{parentName:"ul"},"The amount of NEAR to attach (deducted from ",(0,l.kt)("strong",{parentName:"li"},"your contract\u2019s balance"),")")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Notice that the callback could be made to ",(0,l.kt)("strong",{parentName:"p"},"any")," contract. This means that, if you want, the result could be potentially handled by another contract.")),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"The fact that you are creating a Promise means that both the cross-contract call and callback will ",(0,l.kt)("strong",{parentName:"p"},"not execute immediately"),". In fact:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"The cross-contract call will execute 1 or 2 blocks after your method finishes ",(0,l.kt)("strong",{parentName:"li"},"correctly"),"."),(0,l.kt)("li",{parentName:"ul"},"The callback will then execute 1 or 2 blocks after the ",(0,l.kt)("strong",{parentName:"li"},"external")," method finishes (",(0,l.kt)("strong",{parentName:"li"},"correctly or not"),")"))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"callback-method"},"Callback Method"),(0,l.kt)("p",null,"If your method finishes correctly, then eventually your callback method will execute. This will happen whether the external contract finishes ",(0,l.kt)("strong",{parentName:"p"},"successfully or not"),". We repeat, if your original method finishes correctly, then your callback will ",(0,l.kt)("strong",{parentName:"p"},"always execute"),"."),(0,l.kt)("p",null,"In the callback method you will have access to the result, which contains two important arguments:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"status"),": Telling if the external method finished successfully or not"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"buffer"),": Having the value returned by the external method (if any)")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"The callback methods in your contract must be public, so it can be called when the second promise executes. However, they should be only callable by ",(0,l.kt)("strong",{parentName:"p"},"your contract"),". Always make sure to make it private by asserting that the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"current_account_id"),". In rust this can be achieved using the ",(0,l.kt)("inlineCode",{parentName:"p"},"#[private]")," decorator.")),(0,l.kt)("h3",{id:"checking-execution-status"},"Checking Execution Status"),(0,l.kt)(s.O2,{mdxType:"CodeTabs"},(0,l.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"contract.ts",url:"https://github.com/near-examples/cross-contract-hello-js/blob/master/contract/src/contract.ts",start:"31",end:"38",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/cross-contract-hello-rust/blob/main/contract/src/lib.rs",start:"67",end:"73",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/cross-contract-hello-as/contract/assembly/index.ts",start:"70",end:"78",mdxType:"Github"}),(0,l.kt)(s.Ey,{fname:"external.ts",url:"https://github.com/near-examples/docs-examples/blob/main/cross-contract-hello-as/contract/assembly/external.ts",start:"9",end:"19",mdxType:"Github"}))),(0,l.kt)("h3",{id:"successful-execution"},"Successful Execution"),(0,l.kt)("p",null,"In case the call finishes successfully, the resulting object will have a ",(0,l.kt)("inlineCode",{parentName:"p"},"status")," of 1, and the ",(0,l.kt)("inlineCode",{parentName:"p"},"buffer")," will have the encoded result (if any). In order to recover the result you need to decode it from the resulting ",(0,l.kt)("inlineCode",{parentName:"p"},"buffer"),":"),(0,l.kt)(s.O2,{mdxType:"CodeTabs"},(0,l.kt)(s.SQ,{value:"\ud83c\udf10 JavaScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"contract.ts",url:"https://github.com/near-examples/cross-contract-hello-js/blob/master/contract/src/contract.ts",start:"31",end:"31",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"lib.ts",url:"https://github.com/near-examples/cross-contract-hello-rust/blob/main/contract/src/lib.rs",start:"47",end:"47",mdxType:"Github"})),(0,l.kt)(s.SQ,{value:"\ud83d\ude80 AssemblyScript",language:"ts",mdxType:"Language"},(0,l.kt)(s.Ey,{fname:"index.ts",url:"https://github.com/near-examples/docs-examples/blob/main/cross-contract-hello-as/contract/assembly/index.ts",start:"37",end:"37",mdxType:"Github"}))),(0,l.kt)("h3",{id:"failed-execution"},"Failed Execution"),(0,l.kt)("p",null,"If the external method fails (i.e. it panics), then your callback will be ",(0,l.kt)("strong",{parentName:"p"},"executed anyway"),". Here you need to ",(0,l.kt)("strong",{parentName:"p"},"manually rollback")," any changes made in your\ncontract during the original call. Particularly:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"If the contract attached NEAR to the call, the funds are sent back to ",(0,l.kt)("strong",{parentName:"li"},"the contract's account"),"."),(0,l.kt)("li",{parentName:"ol"},"If the original method made any state changes (i.e. changed or stored data), they ",(0,l.kt)("strong",{parentName:"li"},"won't be automatically reverted"),".")),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"If your original method finishes correctly then the callback executes ",(0,l.kt)("strong",{parentName:"p"},"even if the external method panics"),". Your state will ",(0,l.kt)("strong",{parentName:"p"},"not")," rollback automatically,\nand $NEAR will ",(0,l.kt)("strong",{parentName:"p"},"not")," be returned to the signer automatically. Always make sure to check in the callback if the external method failed, and manually rollback any\noperation if necessary.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"security-concerns"},"Security Concerns"),(0,l.kt)("p",null,"While writing cross-contract calls there is a significant aspect to keep in mind: all the calls are ",(0,l.kt)("strong",{parentName:"p"},"independent")," and ",(0,l.kt)("strong",{parentName:"p"},"asynchronous"),". In other words:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The method in which you make the call and method for the callback are ",(0,l.kt)("strong",{parentName:"li"},"independent"),"."),(0,l.kt)("li",{parentName:"ul"},"There is a ",(0,l.kt)("strong",{parentName:"li"},"delay between the call and the callback"),", in which people can still interact with the contract")),(0,l.kt)("p",null,"This has important implications on how you should handle the callbacks. Particularly:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Make sure you don't leave the contract in a exploitable state between the call and the callback."),(0,l.kt)("li",{parentName:"ol"},"Manually rollback any changes to the state in the callback if the external call failed.")),(0,l.kt)("p",null,"We have a whole ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/zh-CN/develop/contracts/security/callbacks"},"security section")," dedicated to these specific errors, so please go and check it."),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Not following these basic security guidelines could expose your contract to exploits. Please check the ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/zh-CN/develop/contracts/security/callbacks"},"security section"),", and if still in doubt, ",(0,l.kt)("a",{parentName:"p",href:"https://near.chat"},"join us in Discord"),".")))}k.isMDXComponent=!0}}]);