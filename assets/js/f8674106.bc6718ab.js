"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7108,6720,4098,5807,9910,9270,7949],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>u});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),d=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},c=function(t){var e=d(t.components);return n.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),m=d(a),u=r,k=m["".concat(s,".").concat(u)]||m[u]||p[u]||l;return a?n.createElement(k,o(o({ref:e},c),{},{components:a})):n.createElement(k,o({ref:e},c))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(t,e,a)=>{a.d(e,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(t){var e=t.children,a=t.hidden,o=t.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},e)}},65488:(t,e,a)=>{a.d(e,{Z:()=>u});var n=a(87462),r=a(67294),l=a(86010),o=a(72389),i=a(67392),s=a(7094),d=a(12466);const c="tabList__CuJ",p="tabItem_LNqP";function m(t){var e,a,o=t.lazy,m=t.block,u=t.defaultValue,k=t.values,N=t.groupId,g=t.className,h=r.Children.map(t.children,(function(t){if((0,r.isValidElement)(t)&&"value"in t.props)return t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof t.type?t.type:t.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=k?k:h.map((function(t){var e=t.props;return{value:e.value,label:e.label,attributes:e.attributes}})),v=(0,i.l)(b,(function(t,e){return t.value===e.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(t){return t.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===u?u:null!=(e=null!=u?u:null==(a=h.find((function(t){return t.props.default})))?void 0:a.props.value)?e:h[0].props.value;if(null!==y&&!b.some((function(t){return t.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(t){return t.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var f=(0,s.U)(),C=f.tabGroupChoices,T=f.setTabGroupChoices,x=(0,r.useState)(y),w=x[0],A=x[1],D=[],I=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=N){var S=C[N];null!=S&&S!==w&&b.some((function(t){return t.value===S}))&&A(S)}var _=function(t){var e=t.currentTarget,a=D.indexOf(e),n=b[a].value;n!==w&&(I(e),A(n),null!=N&&T(N,String(n)))},E=function(t){var e,a=null;switch(t.key){case"ArrowRight":var n,r=D.indexOf(t.currentTarget)+1;a=null!=(n=D[r])?n:D[0];break;case"ArrowLeft":var l,o=D.indexOf(t.currentTarget)-1;a=null!=(l=D[o])?l:D[D.length-1]}null==(e=a)||e.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},g)},b.map((function(t){var e=t.value,a=t.label,o=t.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===e?0:-1,"aria-selected":w===e,key:e,ref:function(t){return D.push(t)},onKeyDown:E,onFocus:_,onClick:_},o,{className:(0,l.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":w===e})}),null!=a?a:e)}))),o?(0,r.cloneElement)(h.filter((function(t){return t.props.value===w}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map((function(t,e){return(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==w})}))))}function u(t){var e=(0,o.Z)();return r.createElement(m,(0,n.Z)({key:String(e)},t))}},14599:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>b,contentTitle:()=>g,default:()=>f,frontMatter:()=>N,metadata:()=>h,toc:()=>v});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),o=a(65488),i=a(85162),s=a(78497),d=a(10272),c=a(42468),p=a(35172),m=a(40186),u=a(17517),k=["components"],N={id:"environment",title:"Environment"},g=void 0,h={unversionedId:"develop/contracts/environment/environment",id:"develop/contracts/environment/environment",title:"Environment",description:"",source:"@site/../docs/2.develop/contracts/environment/environment.md",sourceDirName:"2.develop/contracts/environment",slug:"/develop/contracts/environment/",permalink:"/near-docs-kor/develop/contracts/environment/",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/environment/environment.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{id:"environment",title:"Environment"},sidebar:"develop",previous:{title:"The Contract Class",permalink:"/near-docs-kor/develop/contracts/anatomy"},next:{title:"State & Data Structures",permalink:"/near-docs-kor/develop/contracts/storage"}},b={},v=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"Who is Calling? Who am I?",id:"who-is-calling-who-am-i",level:2},{value:"Current Account",id:"current-account",level:3},{value:"Predecessor and Signer",id:"predecessor-and-signer",level:3},{value:"Balances and Attached NEAR",id:"balances-and-attached-near",level:2},{value:"Attached Deposit",id:"attached-deposit",level:3},{value:"Account Balance",id:"account-balance",level:3},{value:"Storage Used",id:"storage-used",level:3},{value:"Telling the Time",id:"telling-the-time",level:2},{value:"Timestamp",id:"timestamp",level:3},{value:"Current Epoch",id:"current-epoch",level:3},{value:"Block Index",id:"block-index",level:3},{value:"Gas",id:"gas",level:2},{value:"Prepaid Gas",id:"prepaid-gas",level:3},{value:"Used Gas",id:"used-gas",level:3},{value:"Environment Functions",id:"environment-functions",level:2}],y={toc:v};function f(t){var e=t.components,a=(0,r.Z)(t,k);return(0,l.kt)("wrapper",(0,n.Z)({},y,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Every method execution has an environment associated with information such as:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Who called the method"),(0,l.kt)("li",{parentName:"ol"},"How much money is attached to the call"),(0,l.kt)("li",{parentName:"ol"},"How many computational resources are available"),(0,l.kt)("li",{parentName:"ol"},"The current timestamp"),(0,l.kt)("li",{parentName:"ol"},"Helper functions for Public Key derivation, for example")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,l.kt)(o.Z,{className:"language-tabs",groupId:"code-tabs",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"\ud83c\udf10 JavaScript",mdxType:"TabItem"},(0,l.kt)(c.default,{mdxType:"TableJs"})),(0,l.kt)(i.Z,{value:"\ud83e\udd80 Rust",mdxType:"TabItem"},(0,l.kt)(d.default,{mdxType:"TableRs"})),(0,l.kt)(i.Z,{value:"\ud83d\ude80 AssemblyScript",mdxType:"TabItem"},(0,l.kt)(s.default,{mdxType:"TableAs"}))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"who-is-calling-who-am-i"},"Who is Calling? Who am I?"),(0,l.kt)("p",null,"The environment gives you access to 3 important users: the ",(0,l.kt)("inlineCode",{parentName:"p"},"current_account"),", the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor"),", and the ",(0,l.kt)("inlineCode",{parentName:"p"},"signer"),"."),(0,l.kt)("h3",{id:"current-account"},"Current Account"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"current_account")," contains the address in which your contract is deployed. This is very useful to implement ownership, e.g. making a public method only callable by the contract itself."),(0,l.kt)("h3",{id:"predecessor-and-signer"},"Predecessor and Signer"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor")," is the account that called the method in the contract. Meanwhile, the ",(0,l.kt)("inlineCode",{parentName:"p"},"signer")," is the account that ",(0,l.kt)("em",{parentName:"p"},"signed")," the initial transaction."),(0,l.kt)("p",null,"During a simple transaction (no ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/develop/contracts/crosscontract"},"cross-contract calls"),") the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor")," is the same as the ",(0,l.kt)("inlineCode",{parentName:"p"},"signer"),". For example, if ",(0,l.kt)("strong",{parentName:"p"},"alice.near")," calls ",(0,l.kt)("strong",{parentName:"p"},"contract.near"),", from the contract's perspective, ",(0,l.kt)("strong",{parentName:"p"},"alice.near")," is both the ",(0,l.kt)("inlineCode",{parentName:"p"},"signer")," and the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor"),". However, if ",(0,l.kt)("strong",{parentName:"p"},"contract.near")," creates a ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/develop/contracts/crosscontract"},"cross-contract call"),", then the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor")," changes down the line. In the example bellow, when ",(0,l.kt)("strong",{parentName:"p"},"pool.near")," executes, it would see ",(0,l.kt)("strong",{parentName:"p"},"contract.near")," as the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor")," and ",(0,l.kt)("strong",{parentName:"p"},"alice.near")," as the ",(0,l.kt)("inlineCode",{parentName:"p"},"signer"),"."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://miro.medium.com/max/1400/1*LquSNOoRyXpITQF9ugsDpQ.png",alt:"img"}),"\n",(0,l.kt)("em",{parentName:"p"},"You can access information about the users interacting with your smart contract")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"In most scenarios you will ",(0,l.kt)("strong",{parentName:"p"},"only need to know the predecessor"),". However, there are situations in which the signer is very useful. For example, when adding ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/develop/relevant-contracts/nft"},"NFTs")," into ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near-examples/nft-tutorial/blob/7fb267b83899d1f65f1bceb71804430fab62c7a7/market-contract/src/nft_callbacks.rs#L42"},"this marketplace"),", the contract checks that the ",(0,l.kt)("inlineCode",{parentName:"p"},"signer"),", i.e. the person who generated the transaction chain, is the NFT owner.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"balances-and-attached-near"},"Balances and Attached NEAR"),(0,l.kt)("p",null,"The environment gives you access to 3 token-related parameters, all expressed in yoctoNEAR (1 \u24c3 = 10",(0,l.kt)("sup",null,"24"),"y\u24c3):"),(0,l.kt)("h3",{id:"attached-deposit"},"Attached Deposit"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"attached_deposit")," represents the amount of yoctoNEAR the predecessor attached to the call. "),(0,l.kt)("p",null,"This amount is ",(0,l.kt)("strong",{parentName:"p"},"already deposited")," in your contract's account, and is ",(0,l.kt)("strong",{parentName:"p"},"automatically returned")," to the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor")," if your ",(0,l.kt)("strong",{parentName:"p"},"method panics"),"."),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"If you make a ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/develop/contracts/crosscontract"},"cross-contract call")," and it panics, the funds are sent back to ",(0,l.kt)("strong",{parentName:"p"},"your contract"),". See how to handle this situation in the ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/develop/contracts/crosscontract#failed-execution"},"callback section"))),(0,l.kt)("h3",{id:"account-balance"},"Account Balance"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"account_balance")," represents the balance of your contract (",(0,l.kt)("inlineCode",{parentName:"p"},"current_account"),")."),(0,l.kt)("p",null,"It includes the ",(0,l.kt)("inlineCode",{parentName:"p"},"attached_deposit"),", since it was deposited when the method execution started."),(0,l.kt)("p",null,"If the contract has any locked $NEAR, it will appear in ",(0,l.kt)("inlineCode",{parentName:"p"},"account_locked_balance"),"."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"storage-used"},"Storage Used"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"storage_used")," represents the amount of ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/develop/contracts/storage"},"storage")," that is currently being used by your contract."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"If you want to know how much storage a structure uses, print the storage before and after storing it.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"telling-the-time"},"Telling the Time"),(0,l.kt)("p",null,"The environment exposes three different ways to tell the pass of time, each representing a different dimension of the underlying blockchain."),(0,l.kt)("h3",{id:"timestamp"},"Timestamp"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")," attribute represents the approximated ",(0,l.kt)("strong",{parentName:"p"},"UNIX timestamp")," at which this call was executed. It quantifies time passing in a human way, enabling to check if a specific date has passed or not."),(0,l.kt)("h3",{id:"current-epoch"},"Current Epoch"),(0,l.kt)("p",null,"The NEAR blockchain groups blocks in ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/concepts/basics/epoch"},"Epochs"),". The ",(0,l.kt)("inlineCode",{parentName:"p"},"current_epoch")," attribute measures how many epochs have passed so far. It is very useful to coordinate with other contracts that measure time in epochs, such as the ",(0,l.kt)("a",{parentName:"p",href:"/near-docs-kor/concepts/basics/validators"},"validators"),"."),(0,l.kt)("h3",{id:"block-index"},"Block Index"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"block_index")," represents the index of the block in which this transaction will be added to the blockchain."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"gas"},"Gas"),(0,l.kt)("p",null,"Your contract has a ",(0,l.kt)("strong",{parentName:"p"},"limited number of computational resources")," to use on each call. Such resources are measured in ",(0,l.kt)("a",{parentName:"p",href:"/concepts/basics/transactions/gas"},"Gas"),"."),(0,l.kt)("p",null,"Gas can be thought of as wall time, where 1 PetaGas (1_000 TGas) is ~1 second of compute time."),(0,l.kt)("p",null,"Each code instruction costs a certain amount of Gas, and if you run out of it, the execution halts with the error message ",(0,l.kt)("inlineCode",{parentName:"p"},"Exceeded the prepaid gas"),"."),(0,l.kt)("p",null,"The environment gives you access to two gas-related arguments: ",(0,l.kt)("inlineCode",{parentName:"p"},"prepaid_gas")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"used_gas"),"."),(0,l.kt)("h3",{id:"prepaid-gas"},"Prepaid Gas"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"prepaid_gas")," represents the amount of Gas the ",(0,l.kt)("inlineCode",{parentName:"p"},"predecessor")," attached to this call. It cannot exceed the limit 300TGas (300 * 10",(0,l.kt)("sup",null,"12")," Gas)."),(0,l.kt)("h3",{id:"used-gas"},"Used Gas"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"used_gas")," contains the amount of Gas that has been used so far. It is useful to estimate the Gas cost of running a method."),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"During ",(0,l.kt)("a",{parentName:"p",href:"/develop/contracts/crosscontract"},"cross-contract calls")," always make sure the callback has enough Gas to fully execute.")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"If you already ",(0,l.kt)("a",{parentName:"p",href:"/concepts/basics/transactions/gas#accurate-estimates-with-automated-tests"},"estimated the Gas")," a method needs, you can ensure it never runs out of Gas by using ",(0,l.kt)("inlineCode",{parentName:"p"},"assert")),(0,l.kt)(o.Z,{className:"language-tabs",groupId:"code-tabs",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"\ud83e\udd80 Rust",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'const REQUIRED_GAS: Gas = Gas(20_000_000_000_000); // 20 TGas\nassert!(env::prepaid_gas() >= REQUIRED_GAS, "Please attach at least 20 TGas");\n')),"  "))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"environment-functions"},"Environment Functions"),(0,l.kt)(o.Z,{className:"language-tabs",groupId:"code-tabs",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"\ud83c\udf10 JavaScript",mdxType:"TabItem"},(0,l.kt)(u.default,{mdxType:"TableJsFunc"})),(0,l.kt)(i.Z,{value:"\ud83e\udd80 Rust",mdxType:"TabItem"},(0,l.kt)(m.default,{mdxType:"TableRsFunc"})),(0,l.kt)(i.Z,{value:"\ud83d\ude80 AssemblyScript",mdxType:"TabItem"},(0,l.kt)(p.default,{mdxType:"TableAsFunc"}))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"In the JS SDK, ",(0,l.kt)("inlineCode",{parentName:"p"},'throw new Error("message")')," mimics the behavior of Rust's ",(0,l.kt)("inlineCode",{parentName:"p"},'env::panic_str("message")'),".")),(0,l.kt)("hr",null))}f.isMDXComponent=!0},35172:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>N,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var n,r=a(87462),l=a(63366),o=(a(67294),a(3905)),i=["components"],s={},d=void 0,c={unversionedId:"develop/contracts/environment/table-func.as",id:"develop/contracts/environment/table-func.as",title:"table-func.as",description:"| Function Name          | SDK method                     | Description                                                            |",source:"@site/../docs/2.develop/contracts/environment/table-func.as.md",sourceDirName:"2.develop/contracts/environment",slug:"/develop/contracts/environment/table-func.as",permalink:"/near-docs-kor/develop/contracts/environment/table-func.as",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/environment/table-func.as.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{}},p={},m=[],u=(n="TableAsFunc",function(t){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}),k={toc:m};function N(t){var e=t.components,a=(0,l.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(u,{mdxType:"TableAsFunc"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function Name"),(0,o.kt)("th",{parentName:"tr",align:null},"SDK method"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SHA 256"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.sha256(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using sha256.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 256"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.keccak256(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using keccak256.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 512"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.keccak512(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using keccak512.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Panic String"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.panic(message)")),(0,o.kt)("td",{parentName:"tr",align:null},"Terminates the execution of the program with the UTF-8 encoded message.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Log String"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.log_utf8(message)")),(0,o.kt)("td",{parentName:"tr",align:null},"Logs the string message. This message is stored on chain.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Validator Stake"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.validator_stake(account_id)")),(0,o.kt)("td",{parentName:"tr",align:null},"For a given account return its current stake. If the account is not a validator, returns 0.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Validator Total Stake"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.validator_total_stake()")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the total stake of validators in the current epoch.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Account ID Validation"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.isValidAccountID(account_id)")),(0,o.kt)("td",{parentName:"tr",align:null},"Validates an ",(0,o.kt)("inlineCode",{parentName:"td"},"accountId")," string."))))))}N.isMDXComponent=!0},17517:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>N,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var n,r=a(87462),l=a(63366),o=(a(67294),a(3905)),i=["components"],s={},d=void 0,c={unversionedId:"develop/contracts/environment/table-func.js",id:"develop/contracts/environment/table-func.js",title:"table-func.js",description:"| Function Name          | SDK method                    | Description                                                                          |",source:"@site/../docs/2.develop/contracts/environment/table-func.js.md",sourceDirName:"2.develop/contracts/environment",slug:"/develop/contracts/environment/table-func.js",permalink:"/near-docs-kor/develop/contracts/environment/table-func.js",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/environment/table-func.js.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{}},p={},m=[],u=(n="TableJsFunc",function(t){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}),k={toc:m};function N(t){var e=t.components,a=(0,l.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(u,{mdxType:"TableJsFunc"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function Name"),(0,o.kt)("th",{parentName:"tr",align:null},"SDK method"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SHA 256"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.sha256(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using sha256.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 256"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.keccak256(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using keccak256.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 512"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.keccak512(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using keccak512.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RIPEMD 160"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.ripemd160(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes the bytes using the RIPEMD-160 hash function.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"EC Recover"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.ecrecover(hash, sig, v, malleabilityFlag)")),(0,o.kt)("td",{parentName:"tr",align:null},"Recovers an ECDSA signer address from a 32-byte message ",(0,o.kt)("inlineCode",{parentName:"td"},"hash")," and a corresponding ",(0,o.kt)("inlineCode",{parentName:"td"},"signature")," along with ",(0,o.kt)("inlineCode",{parentName:"td"},"v")," recovery byte. Takes in an additional flag to check for malleability of the signature which is generally only ideal for transactions. Returns 64 bytes representing the public key if the recovery was successful.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Log String"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.log(msg)")),(0,o.kt)("td",{parentName:"tr",align:null},"Logs the string message. This message is stored on chain.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Validator Stake"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.validatorStake(accountId)")),(0,o.kt)("td",{parentName:"tr",align:null},"For a given account return its current stake. If the account is not a validator, returns 0.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Validator Total Stake"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.validatorTotalStake()")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the total stake of validators in the current epoch."))))))}N.isMDXComponent=!0},40186:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>N,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var n,r=a(87462),l=a(63366),o=(a(67294),a(3905)),i=["components"],s={},d=void 0,c={unversionedId:"develop/contracts/environment/table-func.rs",id:"develop/contracts/environment/table-func.rs",title:"table-func.rs",description:"| Function Name          | SDK method                      | Description                                                            |",source:"@site/../docs/2.develop/contracts/environment/table-func.rs.md",sourceDirName:"2.develop/contracts/environment",slug:"/develop/contracts/environment/table-func.rs",permalink:"/near-docs-kor/develop/contracts/environment/table-func.rs",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/environment/table-func.rs.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{}},p={},m=[],u=(n="TableRsFunc",function(t){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}),k={toc:m};function N(t){var e=t.components,a=(0,l.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(u,{mdxType:"TableRsFunc"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function Name"),(0,o.kt)("th",{parentName:"tr",align:null},"SDK method"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SHA 256"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::sha256(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using sha256.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 256"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::keccak256(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using keccak256.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 512"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::keccak512(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes a sequence of bytes using keccak512.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SHA 256 (Array)"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::sha256_array(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes the bytes using the SHA-256 hash function. This returns a 32 byte hash.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 256 (Array)"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::keccak256_array(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes the bytes using the Keccak-256 hash function. This returns a 32 byte hash.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Keccak 512 (Array)"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::keccak512_array(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes the bytes using the Keccak-512 hash function. This returns a 64 byte hash.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RIPEMD 160 (Array)"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::ripemd160_array(value)")),(0,o.kt)("td",{parentName:"tr",align:null},"Hashes the bytes using the RIPEMD-160 hash function. This returns a 20 byte hash.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"EC Recover"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::ecrecover(hash, signature, v, malleability_flag)")),(0,o.kt)("td",{parentName:"tr",align:null},"Recovers an ECDSA signer address from a 32-byte message ",(0,o.kt)("inlineCode",{parentName:"td"},"hash")," and a corresponding ",(0,o.kt)("inlineCode",{parentName:"td"},"signature")," along with ",(0,o.kt)("inlineCode",{parentName:"td"},"v")," recovery byte. Takes in an additional flag to check for malleability of the signature which is generally only ideal for transactions. Returns 64 bytes representing the public key if the recovery was successful.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Panic String"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::panic_str(message)")),(0,o.kt)("td",{parentName:"tr",align:null},"Terminates the execution of the program with the UTF-8 encoded message.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Log String"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::log_str(message)")),(0,o.kt)("td",{parentName:"tr",align:null},"Logs the string message. This message is stored on chain.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Validator Stake"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::validator_stake(account_id)")),(0,o.kt)("td",{parentName:"tr",align:null},"For a given account return its current stake. If the account is not a validator, returns 0.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Validator Total Stake"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::validator_total_stake()")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the total stake of validators in the current epoch."))))))}N.isMDXComponent=!0},78497:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>N,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var n,r=a(87462),l=a(63366),o=(a(67294),a(3905)),i=["components"],s={},d=void 0,c={unversionedId:"develop/contracts/environment/table.as",id:"develop/contracts/environment/table.as",title:"table.as",description:"| Variable Name          | SDK Variable                   | Description                                                            |",source:"@site/../docs/2.develop/contracts/environment/table.as.md",sourceDirName:"2.develop/contracts/environment",slug:"/develop/contracts/environment/table.as",permalink:"/near-docs-kor/develop/contracts/environment/table.as",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/environment/table.as.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{}},p={},m=[],u=(n="TableAs",function(t){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}),k={toc:m};function N(t){var e=t.components,a=(0,l.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(u,{mdxType:"TableAs"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable Name"),(0,o.kt)("th",{parentName:"tr",align:null},"SDK Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Predecessor"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.predecessor")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID that called this method")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Current Account"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.contractName")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID of this smart contract")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Signer"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.sender")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID that signed the transaction leading to this execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Attached Deposit"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.attachedDeposit")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount in NEAR attached to the call by the predecessor")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Account Balance"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.accountBalance")),(0,o.kt)("td",{parentName:"tr",align:null},"Balance of this smart contract (including Attached Deposit)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Prepaid Gas"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.prepaidGas")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of gas available for execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Timestamp"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.blockTimestamp")),(0,o.kt)("td",{parentName:"tr",align:null},"Current timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Current Epoch"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.epochHeight")),(0,o.kt)("td",{parentName:"tr",align:null},"Current epoch in the blockchain")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Block Index"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.blockIndex")),(0,o.kt)("td",{parentName:"tr",align:null},"Current block index (a.k.a. block height)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Storage Used"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.storageUsage")),(0,o.kt)("td",{parentName:"tr",align:null},"Current storage used by this smart contract")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Used Gas"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.usedGas")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of gas used for execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Signer Public Key"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.senderPublicKey")),(0,o.kt)("td",{parentName:"tr",align:null},"Sender Public Key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Account Locked Balance"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"context.accountLockedBalance")),(0,o.kt)("td",{parentName:"tr",align:null},"Balance of this smart contract that is locked"))))))}N.isMDXComponent=!0},42468:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>N,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var n,r=a(87462),l=a(63366),o=(a(67294),a(3905)),i=["components"],s={},d=void 0,c={unversionedId:"develop/contracts/environment/table.js",id:"develop/contracts/environment/table.js",title:"table.js",description:"| Variable Name          | SDK Variable                  | Description                                                                          |",source:"@site/../docs/2.develop/contracts/environment/table.js.md",sourceDirName:"2.develop/contracts/environment",slug:"/develop/contracts/environment/table.js",permalink:"/near-docs-kor/develop/contracts/environment/table.js",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/environment/table.js.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{}},p={},m=[],u=(n="TableJs",function(t){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}),k={toc:m};function N(t){var e=t.components,a=(0,l.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(u,{mdxType:"TableJs"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable Name"),(0,o.kt)("th",{parentName:"tr",align:null},"SDK Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Predecessor"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.predecessorAccountId()")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID that called this method")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Current Account"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.currentAccountId()")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID of this smart contract")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Signer"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.signerAccountId()")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID that signed the transaction leading to this execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Attached Deposit"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.attachedDeposit()")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount in NEAR attached to the call by the predecessor")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Account Balance"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.accountBalance()")),(0,o.kt)("td",{parentName:"tr",align:null},"Balance of this smart contract (including Attached Deposit)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Prepaid Gas"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.prepaidGas()")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of gas available for execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Timestamp"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.blockTimestamp()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Current Epoch"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.epochHeight()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current epoch in the blockchain")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Block Index"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.blockIndex()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current block index (a.k.a. block height)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Storage Used"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.storageUsage()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current storage used by this smart contract")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Used Gas"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.usedGas()")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of gas used for execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Signer Public Key"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.signerAccountPk()")),(0,o.kt)("td",{parentName:"tr",align:null},"Sender Public Key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Account Locked Balance"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near.accountLockedBalance()")),(0,o.kt)("td",{parentName:"tr",align:null},"Balance of this smart contract that is locked"))))))}N.isMDXComponent=!0},10272:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>N,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var n,r=a(87462),l=a(63366),o=(a(67294),a(3905)),i=["components"],s={},d=void 0,c={unversionedId:"develop/contracts/environment/table.rs",id:"develop/contracts/environment/table.rs",title:"table.rs",description:"| Variable Name          | SDK Variable                    | Description                                                            |",source:"@site/../docs/2.develop/contracts/environment/table.rs.md",sourceDirName:"2.develop/contracts/environment",slug:"/develop/contracts/environment/table.rs",permalink:"/near-docs-kor/develop/contracts/environment/table.rs",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/2.develop/contracts/environment/table.rs.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{}},p={},m=[],u=(n="TableRs",function(t){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}),k={toc:m};function N(t){var e=t.components,a=(0,l.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(u,{mdxType:"TableRs"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable Name"),(0,o.kt)("th",{parentName:"tr",align:null},"SDK Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Predecessor"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::predecessor_account_id()")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID that called this method")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Current Account"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::current_account_id()")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID of this smart contract")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Signer"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::signer_account_id()")),(0,o.kt)("td",{parentName:"tr",align:null},"Account ID that signed the transaction leading to this execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Attached Deposit"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::attached_deposit()")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount in NEAR attached to the call by the predecessor")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Account Balance"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::account_balance()")),(0,o.kt)("td",{parentName:"tr",align:null},"Balance of this smart contract (including Attached Deposit)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Prepaid Gas"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::prepaid_gas()")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of gas available for execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Timestamp"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::block_timestamp()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Current Epoch"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::epoch_height()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current epoch in the blockchain")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Block Index"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::block_index()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current block index (a.k.a. block height)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Storage Used"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::storage_usage()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current storage used by this smart contract in bytes")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Storage Byte Cost"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::storage_byte_cost()")),(0,o.kt)("td",{parentName:"tr",align:null},"Current storage cost per byte in yoctoNEAR")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Used Gas"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::used_gas()")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount of gas used for execution")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Signer Public Key"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::signer_account_pk()")),(0,o.kt)("td",{parentName:"tr",align:null},"Sender Public Key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Account Locked Balance"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"env::account_locked_balance()")),(0,o.kt)("td",{parentName:"tr",align:null},"Balance of this smart contract that is locked"))))))}N.isMDXComponent=!0}}]);