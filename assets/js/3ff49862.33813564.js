"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[772],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},39911:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var a,r=n(87462),l=n(63366),i=(n(67294),n(3905)),o=["components"],s={sidebar_label:"JS basic tutorial"},p="NEAR Lake indexer basic tutorial",d={unversionedId:"tutorials/indexer/js-lake-indexer",id:"tutorials/indexer/js-lake-indexer",title:"NEAR Lake indexer basic tutorial",description:"near-examples/near-lake-raw-printer-js: source code for the tutorial on how to create an indexer that prints block height and number of shards",source:"@site/../docs/3.tutorials/indexer/js-lake-indexer.md",sourceDirName:"3.tutorials/indexer",slug:"/tutorials/indexer/js-lake-indexer",permalink:"/tutorials/indexer/js-lake-indexer",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/indexer/js-lake-indexer.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{sidebar_label:"JS basic tutorial"},sidebar:"tutorials",previous:{title:"Getting started",permalink:"/tutorials/indexer/near-lake-state-changes-indexer"},next:{title:"Start options",permalink:"/tutorials/indexer/lake-start-options"}},c={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Create a project",id:"create-a-project",level:2},{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Setup TypeScript",id:"setup-typescript",level:2},{value:"Import <code>near-lake-framework</code>",id:"import-near-lake-framework",level:2},{value:"Create a config",id:"create-a-config",level:2},{value:"Create indexer handler",id:"create-indexer-handler",level:2},{value:"Starting the stream",id:"starting-the-stream",level:2},{value:"Compile and run",id:"compile-and-run",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}],m=(a="ProgrammingLanguage",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),k={toc:u};function h(e){var t=e.components,n=(0,l.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"near-lake-indexer-basic-tutorial"},"NEAR Lake indexer basic tutorial"),(0,i.kt)(m,{lang:"js",mdxType:"ProgrammingLanguage"}),(0,i.kt)("admonition",{title:"Source code for the tutorial",type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/near-examples/near-lake-raw-printer-js"},(0,i.kt)("inlineCode",{parentName:"a"},"near-examples/near-lake-raw-printer-js")),": source code for the tutorial on how to create an indexer that prints block height and number of shards")),(0,i.kt)("p",null,"Recently we have ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/near-lake-framework"},"published a JavaScript version of the NEAR Lake Framework")," on npmjs.org"),(0,i.kt)("p",null,"We want to empower you with a basic tutorial on how to use the JavaScript Library. Let's get started!"),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"Before we get started, please, ensure you have:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"nodejs")," installed")),(0,i.kt)("h2",{id:"create-a-project"},"Create a project"),(0,i.kt)("p",null,"Create an indexer project:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir near-lake-raw-printer-js && cd near-lake-raw-printer-js\n")),(0,i.kt)("p",null,"Now we're going to call ",(0,i.kt)("inlineCode",{parentName:"p"},"npm init"),", we can continue with the default values pressing Enter on every question in the interactive mode:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm init\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'version: (1.0.0)\ndescription:\nentry point: (index.js)\ntest command:\ngit repository:\nkeywords:\nauthor:\nlicense: (ISC)\nAbout to write to /Users/near/projects/near-lake-raw-printer-js/package.json:\n\n{\n  "name": "near-lake-raw-printer-js",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "author": "",\n  "license": "ISC"\n}\n\n\nIs this OK? (yes)\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," is ready. Let's install ",(0,i.kt)("inlineCode",{parentName:"p"},"near-lake-framework")),(0,i.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,i.kt)("p",null,"Install ",(0,i.kt)("inlineCode",{parentName:"p"},"near-lake-framework")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install near-lake-framework --save\n")),(0,i.kt)("p",null,"Install ",(0,i.kt)("inlineCode",{parentName:"p"},"typescript")," as dev dependency"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install typescript --save-dev\n")),(0,i.kt)("h2",{id:"setup-typescript"},"Setup TypeScript"),(0,i.kt)("p",null,"Now we can create ",(0,i.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," for TypeScript settings:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"touch tsconfig.json\n")),(0,i.kt)("p",null,"Paste the content to the file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=tsconfig.json",title:"tsconfig.json"},'{\n  "compilerOptions": {\n    "lib": [\n      "ES2015",\n      "dom"\n    ]\n  }\n}\n')),(0,i.kt)("p",null,"Now let's add the ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts")," section to the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "start": "tsc && node index.js"\n}\n')),(0,i.kt)("p",null,"After that your ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," should look similar to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=package.json",title:"package.json"},'{\n  "name": "near-lake-raw-printer",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "start": "tsc && node index.js"\n  },\n  "dependencies": {\n    "near-lake-framework": "^1.0.1"\n  },\n  "devDependencies": {\n    "typescript": "^4.6.4"\n  }\n}\n')),(0,i.kt)("p",null,"Now let's create ",(0,i.kt)("inlineCode",{parentName:"p"},"index.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"touch index.ts\n")),(0,i.kt)("p",null,"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"index.ts")," in your favorite editor to start coding."),(0,i.kt)("h2",{id:"import-near-lake-framework"},"Import ",(0,i.kt)("inlineCode",{parentName:"h2"},"near-lake-framework")),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"index.ts")," file let's import the necessary dependencies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { startStream, types } from 'near-lake-framework';\n")),(0,i.kt)("p",null,"We've imported the main function ",(0,i.kt)("inlineCode",{parentName:"p"},"startStream")," which will be called to actually run the indexer, and ",(0,i.kt)("inlineCode",{parentName:"p"},"types")," that hold the ",(0,i.kt)("inlineCode",{parentName:"p"},"LakeConfig")," type we need to contruct."),(0,i.kt)("h2",{id:"create-a-config"},"Create a config"),(0,i.kt)("p",null,"To get indexer running we need to start it with a config. We need to create an instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"LakeConfig")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const lakeConfig: types.LakeConfig = {\n    s3BucketName: "near-lake-data-mainnet",\n    s3RegionName: "eu-central-1",\n    startBlockHeight: 63804051,\n};\n')),(0,i.kt)("h2",{id:"create-indexer-handler"},"Create indexer handler"),(0,i.kt)("p",null,"Indexer will be streaming the ",(0,i.kt)("a",{parentName:"p",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/toc"},(0,i.kt)("inlineCode",{parentName:"a"},"StreamerMessage"))," instances we need to handle according to our needs."),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"near-lake-framework")," JS library the handler have to be presented as a callback function. This function have to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"be asynchronous"),(0,i.kt)("li",{parentName:"ul"},"accept an argument of type ",(0,i.kt)("a",{parentName:"li",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/toc"},(0,i.kt)("inlineCode",{parentName:"a"},"StreamerMessage"))),(0,i.kt)("li",{parentName:"ul"},"return nothing (",(0,i.kt)("inlineCode",{parentName:"li"},"void"),")")),(0,i.kt)("p",null,"Creating the callback:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"async function handleStreamerMessage(streamerMessage: types.StreamerMessage): Promise<void> {\n    //\n}\n")),(0,i.kt)("p",null,"For this tutorial our requirement is to log the block height and the numer of shards. That's simple:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"async function handleStreamerMessage(streamerMessage: types.StreamerMessage): Promise<void> {\n    console.log(`\n        Block #${streamerMessage.block.header.height}\n        Shards: ${streamerMessage.shards.length}\n    `);\n}\n")),(0,i.kt)("h2",{id:"starting-the-stream"},"Starting the stream"),(0,i.kt)("p",null,"And the last thing to write is the call to ",(0,i.kt)("inlineCode",{parentName:"p"},"startStream")," with the config and pass the callback function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"(async () => {\n    await startStream(lakeConfig, handleStreamerMessage);\n})();\n")),(0,i.kt)("p",null,"That's it. Now we can compile the code and run it"),(0,i.kt)("h2",{id:"compile-and-run"},"Compile and run"),(0,i.kt)("admonition",{title:"Credentials",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"To be able to access the data from ",(0,i.kt)("a",{parentName:"p",href:"/tools/realtime#near-lake-indexer"},"NEAR Lake")," you need to provide credentials. Please, see the ",(0,i.kt)("a",{parentName:"p",href:"/tutorials/indexer/credentials"},"Credentials")," article")),(0,i.kt)("p",null,"We've added the ",(0,i.kt)("inlineCode",{parentName:"p"},"start")," command to the ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts"),", so the compilation and run should as easy as"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm run start\n")),(0,i.kt)("p",null,"You should see something like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Block #63804051 Shards: 4\nBlock #63804052 Shards: 4\nBlock #63804053 Shards: 4\nBlock #63804054 Shards: 4\nBlock #63804055 Shards: 4\nBlock #63804056 Shards: 4\nBlock #63804057 Shards: 4\nBlock #63804058 Shards: 4\nBlock #63804059 Shards: 4\nBlock #63804060 Shards: 4\n")),(0,i.kt)("p",null,"You can stop the indexer by pressing CTRL+C"),(0,i.kt)("h2",{id:"whats-next"},"What's next?"),(0,i.kt)("p",null,"You can play around and change the content of the callback function ",(0,i.kt)("a",{parentName:"p",href:"#create-indexer-handler"},(0,i.kt)("inlineCode",{parentName:"a"},"handleStreamerMessage"))," to handle the data differently."),(0,i.kt)("p",null,"You can find the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/near-examples/near-lake-raw-printer-js"},"source code for this tutorial on the GitHub"),"."))}h.isMDXComponent=!0}}]);