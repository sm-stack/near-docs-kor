"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9476],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,c=function(e,t){if(null==e)return{};var n,a,c={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,c=e.mdxType,o=e.originalType,i=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=l(n),m=c,k=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(k,s(s({ref:t},u),{},{components:n})):a.createElement(k,s({ref:t},u))}));function m(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=n.length,s=new Array(o);s[0]=d;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r.mdxType="string"==typeof e?e:c,s[1]=r;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80869:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),c=n(63366),o=(n(67294),n(3905)),s=["components"],r={id:"account",title:"Account",sidebar_label:"Account"},i=void 0,l={unversionedId:"tools/near-api-js/account",id:"tools/near-api-js/account",title:"Account",description:"You can interact with, create or delete NEAR accounts.",source:"@site/../docs/4.tools/near-api-js/naj-account.md",sourceDirName:"4.tools/near-api-js",slug:"/tools/near-api-js/account",permalink:"/near-docs-kor/tools/near-api-js/account",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/4.tools/near-api-js/naj-account.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{id:"account",title:"Account",sidebar_label:"Account"}},u={},p=[{value:"Load Account",id:"load-account",level:3},{value:"Create Account",id:"create-account",level:3},{value:"Delete Account",id:"delete-account",level:3},{value:"Get Account Balance",id:"get-account-balance",level:3},{value:"Get Account details",id:"get-account-details",level:3},{value:"Deploy a Contract",id:"deploy-a-contract",level:3},{value:"Send Tokens",id:"send-tokens",level:3},{value:"State",id:"state",level:3},{value:"Access Keys",id:"access-keys",level:3},{value:"Add Full Access Key",id:"add-full-access-key",level:4},{value:"Add Function Access Key",id:"add-function-access-key",level:4},{value:"Get All Access Keys",id:"get-all-access-keys",level:4},{value:"Delete Access Key",id:"delete-access-key",level:4}],d={toc:p};function m(e){var t=e.components,n=(0,c.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can interact with, create or delete NEAR accounts."),(0,o.kt)("h3",{id:"load-account"},"Load Account"),(0,o.kt)("p",null,"This will return an Account object for you to interact with."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const account = await nearConnection.account("example-account.testnet");\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-class"})," Class ",(0,o.kt)("inlineCode",{parentName:"a"},"Account"))),(0,o.kt)("h3",{id:"create-account"},"Create Account"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// create a new account using funds from the account used to create it.\nconst account = await nearConnection.account("example-account.testnet");\nawait account.createAccount(\n  "example-account2.testnet", // new account name\n  "8hSHprDq2StXwMtNd43wDTXQYsjXcD4MJTXQYsjXcc", // public key for new account\n  "10000000000000000000" // initial balance for new account in yoctoNEAR\n);\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#createaccount"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.createAccount"))),(0,o.kt)("h3",{id:"delete-account"},"Delete Account"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// deletes account found in the `account` object\n// transfers remaining account balance to the accountId passed as an argument\nconst account = await nearConnection.account("example-account.testnet");\nawait account.deleteAccount("beneficiary-account.testnet");\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#deleteaccount"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.deleteAccount"))),(0,o.kt)("h3",{id:"get-account-balance"},"Get Account Balance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// gets account balance\nconst account = await nearConnection.account("example-account.testnet");\nawait account.getAccountBalance();\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#getaccountbalance"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.getAccountBalance"))),(0,o.kt)("h3",{id:"get-account-details"},"Get Account details"),(0,o.kt)("p",null,"Returns information about an account, such as authorized apps."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// gets account details in terms of authorized apps and transactions\nconst account = await nearConnection.account("example-account.testnet");\nawait account.getAccountDetails();\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#getaccountdetails"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.getAccountDetails"))),(0,o.kt)("h3",{id:"deploy-a-contract"},"Deploy a Contract"),(0,o.kt)("p",null,"You can deploy a contract from a compiled WASM file. This returns an object with transaction and receipts outcomes and status."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const account = await nearConnection.account(\"example-account.testnet\");\nconst transactionOutcome = await account.deployContract(fs.readFileSync('example-file.wasm'));\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#deploycontract"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.deployContract")),"\n","\xa0","\xa0","\xa0","\n",(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/interfaces/providers_provider.FinalExecutionOutcome"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-interface"})," Interface ",(0,o.kt)("inlineCode",{parentName:"a"},"FinalExecutionOutcome"))),(0,o.kt)("h3",{id:"send-tokens"},"Send Tokens"),(0,o.kt)("p",null,"Transfer NEAR tokens between accounts. This returns an object with transaction and receipts outcomes and status."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const account = await nearConnection.account("sender-account.testnet");\nawait account.sendMoney(\n  "receiver-account.testnet", // receiver account\n  "1000000000000000000000000" // amount in yoctoNEAR\n);\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#sendmoney"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.sendMoney")),"\n","\xa0","\xa0","\xa0","\n",(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/interfaces/providers_provider.FinalExecutionOutcome"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-interface"})," Interface ",(0,o.kt)("inlineCode",{parentName:"a"},"FinalExecutionOutcome"))),(0,o.kt)("h3",{id:"state"},"State"),(0,o.kt)("p",null,"Get basic account information, such as amount of tokens the account has or the amount of storage it uses."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const account = await nearConnection.account("example-account.testnet");\nconst accountState = await account.state();\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#state"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.state")),"\n","\xa0","\xa0","\xa0","\n",(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/interfaces/providers_provider.AccountView"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-interface"})," Interface ",(0,o.kt)("inlineCode",{parentName:"a"},"AccountView"))),(0,o.kt)("h3",{id:"access-keys"},"Access Keys"),(0,o.kt)("p",null,"You can get and manage keys for an account."),(0,o.kt)("h4",{id:"add-full-access-key"},"Add Full Access Key"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// takes public key as string for argument\nconst account = await nearConnection.account("example-account.testnet");\nawait account.addKey("8hSHprDq2StXwMtNd43wDTXQYsjXcD4MJTXQYsjXcc");\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#addkey"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.addKey"))),(0,o.kt)("h4",{id:"add-function-access-key"},"Add Function Access Key"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const account = await nearConnection.account("example-account.testnet");\nawait account.addKey(\n  "8hSHprDq2StXwMtNd43wDTXQYsjXcD4MJTXQYsjXcc", // public key for new account\n  "example-account.testnet", // contract this key is allowed to call (optional)\n  "example_method", // methods this key is allowed to call (optional)\n  "2500000000000" // allowance key can use to call methods (optional)\n);\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#addkey"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.addKey"))),(0,o.kt)("h4",{id:"get-all-access-keys"},"Get All Access Keys"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const account = await nearConnection.account("example-account.testnet");\nawait account.getAccessKeys();\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#getaccesskeys"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.getAccessKeys")),"\n","\xa0","\xa0","\xa0","\n",(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/interfaces/providers_provider.AccessKeyInfoView"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-interface"})," Interface ",(0,o.kt)("inlineCode",{parentName:"a"},"AccessKeyInfoView"))),(0,o.kt)("h4",{id:"delete-access-key"},"Delete Access Key"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const account = await nearConnection.account("example-account.testnet");\nawait account.deleteKey("8hSHprDq2StXwMtNd43wDTXQYsjXcD4MJTXQYsjXcc");\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://near.github.io/near-api-js/classes/account.Account#deletekey"},(0,o.kt)("span",{class:"typedoc-icon typedoc-icon-method"})," Method ",(0,o.kt)("inlineCode",{parentName:"a"},"Account.deleteKey"))))}m.isMDXComponent=!0}}]);