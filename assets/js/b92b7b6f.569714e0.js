"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3324],{90346:(e,t,a)=>{a.d(t,{Ey:()=>d,O2:()=>i,SQ:()=>p});var l=a(67294),n=a(65488),r=a(85162),s=a(1841),c=a.n(s),o=a(95665),u=a.n(o);function i(e){var t=e.children;return Array.isArray(t)||(t=[t]),l.createElement(n.Z,{className:"language-tabs",groupId:"code-tabs"},t.map((function(e,t){return l.createElement(r.Z,{value:e.props.value,label:e.props.value},e)})))}function p(e){var t=e.children,a=e.language;return Array.isArray(t)||(t=[t]),t=t.map((function(e){return function(e,t){var a=e.props,n=a.children,r=a.url,s=a.start,o=a.end,u=a.fname;if("Github"==e.props.mdxType)return d({url:r,start:s,end:o,language:t,fname:u});if("CodeBlock"==e.props.mdxType)return l.createElement(c(),{fname:u,language:t},n);return e}(e,a)})),1==t.length?l.createElement(r.Z,{value:0,label:t[0].props.fname},t[0]):l.createElement(n.Z,{className:"file-tabs"},t.map((function(e,t){return l.createElement(r.Z,{value:t,label:e.props.fname},e)})))}function d(e){var t=e.url,a=e.start,n=e.end,r=e.language,s=e.fname,c=t+"#";return a&&n&&(c+="L"+a+"-L"+n+"#"),l.createElement(u(),{language:r,fname:s},c)}},85162:(e,t,a)=>{a.d(t,{Z:()=>s});var l=a(67294),n=a(86010);const r="tabItem_Ymn6";function s(e){var t=e.children,a=e.hidden,s=e.className;return l.createElement("div",{role:"tabpanel",className:(0,n.Z)(r,s),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var l=a(87462),n=a(67294),r=a(86010),s=a(72389),c=a(67392),o=a(7094),u=a(12466);const i="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,a,s=e.lazy,d=e.block,m=e.defaultValue,h=e.values,g=e.groupId,v=e.className,b=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=h?h:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,c.l)(f,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(a=b.find((function(e){return e.props.default})))?void 0:a.props.value)?t:b[0].props.value;if(null!==y&&!f.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var x=(0,o.U)(),T=x.tabGroupChoices,C=x.setTabGroupChoices,E=(0,n.useState)(y),w=E[0],N=E[1],R=[],A=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var Z=T[g];null!=Z&&Z!==w&&f.some((function(e){return e.value===Z}))&&N(Z)}var G=function(e){var t=e.currentTarget,a=R.indexOf(t),l=f[a].value;l!==w&&(A(t),N(l),null!=g&&C(g,String(l)))},I=function(e){var t,a=null;switch(e.key){case"ArrowRight":var l,n=R.indexOf(e.currentTarget)+1;a=null!=(l=R[n])?l:R[0];break;case"ArrowLeft":var r,s=R.indexOf(e.currentTarget)-1;a=null!=(r=R[s])?r:R[R.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,r.Z)("tabs-container",i)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},v)},f.map((function(e){var t=e.value,a=e.label,s=e.attributes;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return R.push(e)},onKeyDown:I,onFocus:G,onClick:G},s,{className:(0,r.Z)("tabs__item",p,null==s?void 0:s.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),s?(0,n.cloneElement)(b.filter((function(e){return e.props.value===w}))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function m(e){var t=(0,s.Z)();return n.createElement(d,(0,l.Z)({key:String(t)},e))}},26716:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var l=a(87462),n=a(63366),r=(a(67294),a(3905)),s=(a(65488),a(85162),a(90346)),c=["components"],o={id:"advanced-xcc",title:"Complex Cross Contract Call"},u=void 0,i={unversionedId:"tutorials/examples/advanced-xcc",id:"tutorials/examples/advanced-xcc",title:"Complex Cross Contract Call",description:"",source:"@site/../docs/3.tutorials/examples/advanced-xcc.md",sourceDirName:"3.tutorials/examples",slug:"/tutorials/examples/advanced-xcc",permalink:"/near-docs-kor/tutorials/examples/advanced-xcc",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/examples/advanced-xcc.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{id:"advanced-xcc",title:"Complex Cross Contract Call"},sidebar:"tutorials",previous:{title:"Frontend Multiple Contracts",permalink:"/near-docs-kor/tutorials/examples/frontend-multiple-contracts"},next:{title:"Self Upgrade & State Migration",permalink:"/near-docs-kor/tutorials/examples/update-contract-migrate-state"}},p={},d=[{value:"Batch Actions",id:"batch-actions",level:2},{value:"Getting the Last Response",id:"getting-the-last-response",level:4},{value:"Calling Multiple Contracts",id:"calling-multiple-contracts",level:2},{value:"Getting All Responses",id:"getting-all-responses",level:4},{value:"Multiple Calls - Same Result Type",id:"multiple-calls---same-result-type",level:2},{value:"Getting All Responses",id:"getting-all-responses-1",level:4}],m={toc:d};function h(e){var t=e.components,a=(0,n.Z)(e,c);return(0,r.kt)("wrapper",(0,l.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This example presents 3 instances of complex cross-contract calls. Particularly, it shows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"How to batch multiple method calls to a same contract."),(0,r.kt)("li",{parentName:"ol"},"How to call multiple contracts in parallel, each returning a different type."),(0,r.kt)("li",{parentName:"ol"},"Different ways of handling the responses in the callback.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"batch-actions"},"Batch Actions"),(0,r.kt)("p",null,"You can aggregate multiple actions directed towards one same contract into a batched transaction.\nMethods called this way are executed sequentially, with the added benefit that, if one fails then\nthey ",(0,r.kt)("strong",{parentName:"p"},"all get reverted"),"."),(0,r.kt)(s.O2,{mdxType:"CodeTabs"},(0,r.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,r.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/xcc-advanced/blob/main/contract/src/batch_actions.rs",start:"7",end:"19",mdxType:"Github"}))),(0,r.kt)("h4",{id:"getting-the-last-response"},"Getting the Last Response"),(0,r.kt)("p",null,"In this case, the callback has access to the value returned by the ",(0,r.kt)("strong",{parentName:"p"},"last\naction")," from the chain."),(0,r.kt)(s.O2,{mdxType:"CodeTabs"},(0,r.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,r.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/xcc-advanced/blob/main/contract/src/batch_actions.rs",start:"21",end:"34",mdxType:"Github"}))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"calling-multiple-contracts"},"Calling Multiple Contracts"),(0,r.kt)("p",null,"A contract can call multiple other contracts. This creates multiple transactions that execute\nall in parallel. If one of them fails the rest ",(0,r.kt)("strong",{parentName:"p"},"ARE NOT REVERTED"),"."),(0,r.kt)(s.O2,{mdxType:"CodeTabs"},(0,r.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,r.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/xcc-advanced/blob/main/contract/src/multiple_contracts.rs",start:"18",end:"56",mdxType:"Github"}))),(0,r.kt)("h4",{id:"getting-all-responses"},"Getting All Responses"),(0,r.kt)("p",null,"In this case, the callback has access to an ",(0,r.kt)("strong",{parentName:"p"},"array of responses"),", which have either the\nvalue returned by each call, or an error message."),(0,r.kt)(s.O2,{mdxType:"CodeTabs"},(0,r.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,r.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/xcc-advanced/blob/main/contract/src/multiple_contracts.rs",start:"58",end:"91",mdxType:"Github"}))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"multiple-calls---same-result-type"},"Multiple Calls - Same Result Type"),(0,r.kt)("p",null,"This example is a particular case of the previous one (",(0,r.kt)("a",{parentName:"p",href:"#2-calling-multiple-contracts"},"2. Calling Multiple Contracts"),").\nIt simply showcases a different way to check the results by directly accessing the ",(0,r.kt)("inlineCode",{parentName:"p"},"promise_result")," array."),(0,r.kt)("p",null,"In this case, we call multiple contracts that will return the same type:"),(0,r.kt)(s.O2,{mdxType:"CodeTabs"},(0,r.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,r.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/xcc-advanced/blob/main/contract/src/similar_contracts.rs",start:"18",end:"31",mdxType:"Github"}))),(0,r.kt)("h4",{id:"getting-all-responses-1"},"Getting All Responses"),(0,r.kt)("p",null,"In this case, the callback again has access to an ",(0,r.kt)("strong",{parentName:"p"},"array of responses"),", which we can iterate checking the\nresults."),(0,r.kt)(s.O2,{mdxType:"CodeTabs"},(0,r.kt)(s.SQ,{value:"\ud83e\udd80 Rust",language:"rust",mdxType:"Language"},(0,r.kt)(s.Ey,{fname:"lib.rs",url:"https://github.com/near-examples/xcc-advanced/blob/main/contract/src/similar_contracts.rs",start:"33",end:"61",mdxType:"Github"}))))}h.isMDXComponent=!0}}]);