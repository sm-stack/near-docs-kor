"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7239],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>k});var a=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function r(n,e){if(null==n)return{};var t,a,o=function(n,e){if(null==n)return{};var t,a,o={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var d=a.createContext({}),c=function(n){var e=a.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},u=function(n){var e=c(n.components);return a.createElement(d.Provider,{value:e},n.children)},i={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},p=a.forwardRef((function(n,e){var t=n.components,o=n.mdxType,l=n.originalType,d=n.parentName,u=r(n,["components","mdxType","originalType","parentName"]),p=c(t),k=o,m=p["".concat(d,".").concat(k)]||p[k]||i[k]||l;return t?a.createElement(m,s(s({ref:e},u),{},{components:t})):a.createElement(m,s({ref:e},u))}));function k(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var l=t.length,s=new Array(l);s[0]=p;var r={};for(var d in e)hasOwnProperty.call(e,d)&&(r[d]=e[d]);r.originalType=n,r.mdxType="string"==typeof n?n:o,s[1]=r;for(var c=2;c<l;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},85162:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(67294),o=t(86010);const l="tabItem_Ymn6";function s(n){var e=n.children,t=n.hidden,s=n.className;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(l,s),hidden:t},e)}},65488:(n,e,t)=>{t.d(e,{Z:()=>k});var a=t(87462),o=t(67294),l=t(86010),s=t(72389),r=t(67392),d=t(7094),c=t(12466);const u="tabList__CuJ",i="tabItem_LNqP";function p(n){var e,t,s=n.lazy,p=n.block,k=n.defaultValue,m=n.values,_=n.groupId,h=n.className,b=o.Children.map(n.children,(function(n){if((0,o.isValidElement)(n)&&"value"in n.props)return n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof n.type?n.type:n.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=m?m:b.map((function(n){var e=n.props;return{value:e.value,label:e.label,attributes:e.attributes}})),v=(0,r.l)(f,(function(n,e){return n.value===e.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(n){return n.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===k?k:null!=(e=null!=k?k:null==(t=b.find((function(n){return n.props.default})))?void 0:t.props.value)?e:b[0].props.value;if(null!==y&&!f.some((function(n){return n.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((function(n){return n.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,d.U)(),N=g.tabGroupChoices,x=g.setTabGroupChoices,R=(0,o.useState)(y),w=R[0],T=R[1],E=[],C=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=_){var j=N[_];null!=j&&j!==w&&f.some((function(n){return n.value===j}))&&T(j)}var q=function(n){var e=n.currentTarget,t=E.indexOf(e),a=f[t].value;a!==w&&(C(e),T(a),null!=_&&x(_,String(a)))},P=function(n){var e,t=null;switch(n.key){case"ArrowRight":var a,o=E.indexOf(n.currentTarget)+1;t=null!=(a=E[o])?a:E[0];break;case"ArrowLeft":var l,s=E.indexOf(n.currentTarget)-1;t=null!=(l=E[s])?l:E[E.length-1]}null==(e=t)||e.focus()};return o.createElement("div",{className:(0,l.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},h)},f.map((function(n){var e=n.value,t=n.label,s=n.attributes;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===e?0:-1,"aria-selected":w===e,key:e,ref:function(n){return E.push(n)},onKeyDown:P,onFocus:q,onClick:q},s,{className:(0,l.Z)("tabs__item",i,null==s?void 0:s.className,{"tabs__item--active":w===e})}),null!=t?t:e)}))),s?(0,o.cloneElement)(b.filter((function(n){return n.props.value===w}))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map((function(n,e){return(0,o.cloneElement)(n,{key:e,hidden:n.props.value!==w})}))))}function k(n){var e=(0,s.Z)();return o.createElement(p,(0,a.Z)({key:String(e)},n))}},85429:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>u,default:()=>_,frontMatter:()=>c,metadata:()=>i,toc:()=>k});var a=t(87462),o=t(63366),l=(t(67294),t(3905)),s=t(65488),r=t(85162),d=["components"],c={id:"network",title:"Network"},u=void 0,i={unversionedId:"api/rpc/network",id:"api/rpc/network",title:"Network",description:"",source:"@site/../docs/5.api/rpc/network.md",sourceDirName:"5.api/rpc",slug:"/api/rpc/network",permalink:"/api/rpc/network",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/5.api/rpc/network.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1675844989,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{id:"network",title:"Network"},sidebar:"api",previous:{title:"Protocol",permalink:"/api/rpc/protocol"},next:{title:"Transactions",permalink:"/api/rpc/transactions"}},p={},k=[{value:"Node Status",id:"node-status",level:2},{value:"What could go wrong?",id:"what-could-go-wrong",level:4},{value:"Network Info",id:"network-info",level:2},{value:"What could go wrong?",id:"what-could-go-wrong-1",level:4},{value:"Validation Status",id:"validation-status",level:2},{value:"What could go wrong?",id:"what-could-go-wrong-2",level:4}],m={toc:k};function _(n){var e=n.components,t=(0,o.Z)(n,d);return(0,l.kt)("wrapper",(0,a.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The RPC API enables you to query status information for nodes and validators."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"node-status"},"Node Status"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Returns general status of a given node (sync status, nearcore node version, protocol version, etc), and the current set of validators.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"status")),(0,l.kt)("li",{parentName:"ul"},"params: ",(0,l.kt)("inlineCode",{parentName:"li"},"[]"))),(0,l.kt)("p",null,"Example:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "status",\n  "params": []\n}\n'))),(0,l.kt)(r.Z,{value:"\ud83c\udf10 JavaScript",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const response = await near.connection.provider.status();\n"))),(0,l.kt)(r.Z,{value:"http",label:"HTTPie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"http post https://rpc.testnet.near.org jsonrpc=2.0 method=status params:='[]' id=dontcare\n")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example response: "),(0,l.kt)("p",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "version": {\n      "version": "1.14.0-rc.1",\n      "build": "effa3b7a-modified"\n    },\n    "chain_id": "testnet",\n    "protocol_version": 35,\n    "latest_protocol_version": 35,\n    "rpc_addr": "0.0.0.0:3030",\n    "validators": [\n      {\n        "account_id": "node3",\n        "is_slashed": false\n      },\n      {\n        "account_id": "node0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "staked.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "01node.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "node2",\n        "is_slashed": false\n      },\n      {\n        "account_id": "dokia.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "node1",\n        "is_slashed": false\n      },\n      {\n        "account_id": "lowfeevalidation.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "sl1sub.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "zainy.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "chorus-one.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "certusone.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "joe1.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "bisontrails.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "valeraverim.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "lunanova.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "bazilik.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "dsrvlabs.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "kronos.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "bitcat.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "pool_easy2stake.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "fresh_lockup.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "staking-power.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "syncnode.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "inotel.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "zpool.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "aquarius.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "cloudpost.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "staked.pool.6fb1358",\n        "is_slashed": false\n      },\n      {\n        "account_id": "moonlet.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "jazza.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "orangeclub.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "blazenet.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "pathrock.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "stakin.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "northernlights.stakingpool",\n        "is_slashed": false\n      },\n      {\n        "account_id": "alexandruast.pool.f863973.m0",\n        "is_slashed": false\n      },\n      {\n        "account_id": "top.pool.f863973.m0",\n        "is_slashed": false\n      }\n    ],\n    "sync_info": {\n      "latest_block_hash": "44kieHwr7Gg5r72V3DgU7cpgV2aySkk5qbBCdvwens8T",\n      "latest_block_height": 17774278,\n      "latest_state_root": "3MD3fQqnm3JYa9UQgenEJsR6UHoWuHV4Tpr4hZY7QwfY",\n      "latest_block_time": "2020-09-27T23:59:38.008063088Z",\n      "syncing": false\n    },\n    "validator_account_id": "nearup-node8"\n  },\n  "id": "dontcare"\n}\n')))),(0,l.kt)("h4",{id:"what-could-go-wrong"},"What could go wrong?"),(0,l.kt)("p",null,"When API request fails, RPC server returns a structured error response with a limited number of well-defined error variants, so client code can exhaustively handle all the possible error cases. Our JSON-RPC errors follow ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/joyent/node-verror"},"verror")," convention for structuring the error response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": {\n        "name": <ERROR_TYPE>,\n        "cause": {\n            "info": {..},\n            "name": <ERROR_CAUSE>\n        },\n        "code": -32000,\n        "data": String,\n        "message": "Server error",\n    },\n    "id": "dontcare",\n    "jsonrpc": "2.0"\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Heads up")),(0,l.kt)("p",{parentName:"blockquote"},"The fields ",(0,l.kt)("inlineCode",{parentName:"p"},"code"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"data"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"message")," in the structure above are considered legacy ones and might be deprecated in the future. Please, don't rely on them.")),(0,l.kt)("p",null,"Here is the exhaustive list of the error variants that can be returned by ",(0,l.kt)("inlineCode",{parentName:"p"},"status")," method:"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"ERROR_TYPE",(0,l.kt)("br",null),(0,l.kt)("code",null,"error.name")),(0,l.kt)("th",null,"ERROR_CAUSE",(0,l.kt)("br",null),(0,l.kt)("code",null,"error.cause.name")),(0,l.kt)("th",null,"Reason"),(0,l.kt)("th",null,"Solution"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,"INTERNAL_ERROR"),(0,l.kt)("td",null,"INTERNAL_ERROR"),(0,l.kt)("td",null,"Something went wrong with the node itself or overloaded"),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,"Try again later"),(0,l.kt)("li",null,"Send a request to a different node"),(0,l.kt)("li",null,"Check ",(0,l.kt)("code",null,"error.cause.info")," for more details")))))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"network-info"},"Network Info"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Returns the current state of node network connections (active peers, transmitted data, etc.)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"network_info")),(0,l.kt)("li",{parentName:"ul"},"params: ",(0,l.kt)("em",{parentName:"li"},"none"))),(0,l.kt)("p",null,"Example:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "network_info",\n  "params": []\n}\n'))),(0,l.kt)(r.Z,{value:"http",label:"HTTPie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"http post https://rpc.testnet.near.org jsonrpc=2.0 method=network_info params:='[]' id=dontcare\n")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example response:"),(0,l.kt)("p",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "active_peers": [\n      {\n        "id": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",\n        "addr": "35.193.24.121:24567",\n        "account_id": null\n      }\n    ],\n    "num_active_peers": 34,\n    "peer_max_count": 40,\n    "sent_bytes_per_sec": 17754754,\n    "received_bytes_per_sec": 492116,\n    "known_producers": [\n      {\n        "account_id": "node0",\n        "addr": null,\n        "peer_id": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX"\n      }\n    ]\n  },\n  "id": "dontcare"\n}\n')))),(0,l.kt)("h4",{id:"what-could-go-wrong-1"},"What could go wrong?"),(0,l.kt)("p",null,"When API request fails, RPC server returns a structured error response with a limited number of well-defined error variants, so client code can exhaustively handle all the possible error cases. Our JSON-RPC errors follow ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/joyent/node-verror"},"verror")," convention for structuring the error response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": {\n        "name": <ERROR_TYPE>,\n        "cause": {\n            "info": {..},\n            "name": <ERROR_CAUSE>\n        },\n        "code": -32000,\n        "data": String,\n        "message": "Server error",\n    },\n    "id": "dontcare",\n    "jsonrpc": "2.0"\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Heads up")),(0,l.kt)("p",{parentName:"blockquote"},"The fields ",(0,l.kt)("inlineCode",{parentName:"p"},"code"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"data"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"message")," in the structure above are considered legacy ones and might be deprecated in the future. Please, don't rely on them.")),(0,l.kt)("p",null,"Here is the exhaustive list of the error variants that can be returned by ",(0,l.kt)("inlineCode",{parentName:"p"},"network_info")," method:"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"ERROR_TYPE",(0,l.kt)("br",null),(0,l.kt)("code",null,"error.name")),(0,l.kt)("th",null,"ERROR_CAUSE",(0,l.kt)("br",null),(0,l.kt)("code",null,"error.cause.name")),(0,l.kt)("th",null,"Reason"),(0,l.kt)("th",null,"Solution"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,"INTERNAL_ERROR"),(0,l.kt)("td",null,"INTERNAL_ERROR"),(0,l.kt)("td",null,"Something went wrong with the node itself or overloaded"),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,"Try again later"),(0,l.kt)("li",null,"Send a request to a different node"),(0,l.kt)("li",null,"Check ",(0,l.kt)("code",null,"error.cause.info")," for more details")))))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"validation-status"},"Validation Status"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Queries active validators on the network returning details and the state of validation on the blockchain.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"validators")),(0,l.kt)("li",{parentName:"ul"},"params: ",(0,l.kt)("inlineCode",{parentName:"li"},'["block hash"]'),", ",(0,l.kt)("inlineCode",{parentName:"li"},"[block number]"),", or ",(0,l.kt)("inlineCode",{parentName:"li"},"[null]")," for the latest block")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," For ",(0,l.kt)("inlineCode",{parentName:"p"},'["block hash"]')," & ",(0,l.kt)("inlineCode",{parentName:"p"},"[block number]")," you will need to query from the last block in an epoch."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"[block number]")),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": [17791098]\n}\n'))),(0,l.kt)(r.Z,{value:"\ud83c\udf10 JavaScript",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const response = await near.connection.provider.validators(17791098);\n"))),(0,l.kt)(r.Z,{value:"http",label:"HTTPie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"http post https://rpc.testnet.near.org jsonrpc=2.0 method=validators params:='[17791098]' id=dontcare\n")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'["block hash"]')),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": ["FiG2nMjjue3YdgYAyM3ZqWXSaG6RJj5Gk7hvY8vrEoGw"]\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const response = await near.connection.provider.validators(\n  "FiG2nMjjue3YdgYAyM3ZqWXSaG6RJj5Gk7hvY8vrEoGw"\n);\n'))),(0,l.kt)(r.Z,{value:"http",label:"HTTPie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"http post https://rpc.testnet.near.org jsonrpc=2.0 method=validators params:='[\"FiG2nMjjue3YdgYAyM3ZqWXSaG6RJj5Gk7hvY8vrEoGw\"]' id=dontcare\n")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"[null]")),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "dontcare",\n  "method": "validators",\n  "params": [null]\n}\n'))),(0,l.kt)(r.Z,{value:"\ud83c\udf10 JavaScript",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const response = await near.connection.provider.validators(null);\n"))),(0,l.kt)(r.Z,{value:"http",label:"HTTPie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"http post https://rpc.testnet.near.org jsonrpc=2.0 method=validators params:='[null]' id=dontcare\n")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example response: "),(0,l.kt)("p",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "current_validators": [\n      {\n        "account_id": "01node.pool.f863973.m0",\n        "public_key": "ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",\n        "is_slashed": false,\n        "stake": "176429739989396285019500901780",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "alexandruast.pool.f863973.m0",\n        "public_key": "ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj",\n        "is_slashed": false,\n        "stake": "151430394143736014372434860532",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "aquarius.pool.f863973.m0",\n        "public_key": "ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1",\n        "is_slashed": false,\n        "stake": "130367563121508828296664196836",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "bazilik.pool.f863973.m0",\n        "public_key": "ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",\n        "is_slashed": false,\n        "stake": "169013447850997135034919151338",\n        "shards": [0],\n        "num_produced_blocks": 211,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "bisontrails.pool.f863973.m0",\n        "public_key": "ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR",\n        "is_slashed": false,\n        "stake": "184162578269044826045352223479",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "bitcat.pool.f863973.m0",\n        "public_key": "ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx",\n        "is_slashed": false,\n        "stake": "135215509376418353124295451543",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "blazenet.pool.f863973.m0",\n        "public_key": "ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",\n        "is_slashed": false,\n        "stake": "137364229255641651855065314186",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "certusone.pool.f863973.m0",\n        "public_key": "ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF",\n        "is_slashed": false,\n        "stake": "176644821310043228577017742667",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "chorus-one.pool.f863973.m0",\n        "public_key": "ed25519:6LFwyEEsqhuDxorWfsKcPPs324zLWTaoqk4o6RDXN7Qc",\n        "is_slashed": false,\n        "stake": "110397600457815316527526651811",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "cloudpost.pool.f863973.m0",\n        "public_key": "ed25519:AVVLmJDG8z6UgmW9fmJGVFTdYxxfnqXH6c7FVQmhE6dp",\n        "is_slashed": false,\n        "stake": "136597929514591130855076834167",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "dokia.pool.f863973.m0",\n        "public_key": "ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",\n        "is_slashed": false,\n        "stake": "220445043066799898276306006919",\n        "shards": [0],\n        "num_produced_blocks": 426,\n        "num_expected_blocks": 426\n      },\n      {\n        "account_id": "dsrvlabs.pool.f863973.m0",\n        "public_key": "ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9",\n        "is_slashed": false,\n        "stake": "161508967845718247649113721019",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "fresh_lockup.pool.f863973.m0",\n        "public_key": "ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",\n        "is_slashed": false,\n        "stake": "193574159400241036715020269158",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "inotel.pool.f863973.m0",\n        "public_key": "ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",\n        "is_slashed": false,\n        "stake": "178598870951670469578754984993",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "jazza.pool.f863973.m0",\n        "public_key": "ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9",\n        "is_slashed": false,\n        "stake": "155762349362951827286303475797",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "joe1.pool.f863973.m0",\n        "public_key": "ed25519:G3SxwzmiEZSm3bHnTLtxJvm3NvT1TLQcWuV1iod6i6NJ",\n        "is_slashed": false,\n        "stake": "129230772267511696840933436174",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "kronos.pool.f863973.m0",\n        "public_key": "ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ",\n        "is_slashed": false,\n        "stake": "144544279093485390569527924033",\n        "shards": [0],\n        "num_produced_blocks": 202,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "public_key": "ed25519:61tgPZpy8tqFeAwG4vtf2ZKCRoENiP2A1TJVWEwnbxZU",\n        "is_slashed": false,\n        "stake": "113758432843198726378418342568",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "lowfeevalidation.pool.f863973.m0",\n        "public_key": "ed25519:EXyjSMGSnk5uGphF3gVV1jCudaAudbW8imoEccYEJg3V",\n        "is_slashed": false,\n        "stake": "113685537557977098595863252617",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "lunanova.pool.f863973.m0",\n        "public_key": "ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw",\n        "is_slashed": false,\n        "stake": "172903039219549397267702571804",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "moonlet.pool.f863973.m0",\n        "public_key": "ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",\n        "is_slashed": false,\n        "stake": "140599784944681716744261599779",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "node0",\n        "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",\n        "is_slashed": false,\n        "stake": "1907234923845608896091985071588",\n        "shards": [0],\n        "num_produced_blocks": 3614,\n        "num_expected_blocks": 3616\n      },\n      {\n        "account_id": "node1",\n        "public_key": "ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",\n        "is_slashed": false,\n        "stake": "1906065501889463342906704128820",\n        "shards": [0],\n        "num_produced_blocks": 3613,\n        "num_expected_blocks": 3614\n      },\n      {\n        "account_id": "node2",\n        "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",\n        "is_slashed": false,\n        "stake": "1840271519773089248112279578450",\n        "shards": [0],\n        "num_produced_blocks": 3615,\n        "num_expected_blocks": 3615\n      },\n      {\n        "account_id": "node3",\n        "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",\n        "is_slashed": false,\n        "stake": "1247270566437910246525604113433",\n        "shards": [0],\n        "num_produced_blocks": 2335,\n        "num_expected_blocks": 2342\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "public_key": "ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",\n        "is_slashed": false,\n        "stake": "131652957125263756523827257067",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "northernlights.stakingpool",\n        "public_key": "ed25519:CsMecqKCfagnebMB3ha1uRubay5Z4V85req23bNAJSG3",\n        "is_slashed": false,\n        "stake": "159669819380982417675619400525",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "orangeclub.pool.f863973.m0",\n        "public_key": "ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz",\n        "is_slashed": false,\n        "stake": "143971234567521206686862639104",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "pathrock.pool.f863973.m0",\n        "public_key": "ed25519:G138GdQsU7PdFLD6X88NmTLAEDR7agPcq9HLZqGpegkm",\n        "is_slashed": false,\n        "stake": "125204431569306697735287326827",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "pool_easy2stake.pool.f863973.m0",\n        "public_key": "ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh",\n        "is_slashed": false,\n        "stake": "176893731686620703671521068552",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "sl1sub.pool.f863973.m0",\n        "public_key": "ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL",\n        "is_slashed": false,\n        "stake": "155741680601335529540438949153",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "staked.pool.6fb1358",\n        "public_key": "ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",\n        "is_slashed": false,\n        "stake": "126911347639167461321544980789",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "staked.pool.f863973.m0",\n        "public_key": "ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2",\n        "is_slashed": false,\n        "stake": "140558085958535444819294942478",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "stakin.pool.f863973.m0",\n        "public_key": "ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4",\n        "is_slashed": false,\n        "stake": "122221693837484004905170552626",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "staking-power.pool.f863973.m0",\n        "public_key": "ed25519:4s79F6Fdjgb3rHXPLwaXZG4Hq7Za8nogUu3vXEamRBQo",\n        "is_slashed": false,\n        "stake": "113293334165305165414435157738",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "syncnode.pool.f863973.m0",\n        "public_key": "ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE",\n        "is_slashed": false,\n        "stake": "133414422809248011010747790387",\n        "shards": [0],\n        "num_produced_blocks": 212,\n        "num_expected_blocks": 212\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "public_key": "ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",\n        "is_slashed": false,\n        "stake": "162714097201953456968339272308",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "top.pool.f863973.m0",\n        "public_key": "ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",\n        "is_slashed": false,\n        "stake": "164760602493727447176131601464",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "valeraverim.pool.f863973.m0",\n        "public_key": "ed25519:3686ABqNUZc1qhLWLHg5xZpBzrWPiUCMNZxcCNmg3e2s",\n        "is_slashed": false,\n        "stake": "191733144511459134091274432419",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "zainy.pool.f863973.m0",\n        "public_key": "ed25519:37KfhBNYjqpaUVh3ft5kPcFn3xK1eVvtDZJCQQVCGnzQ",\n        "is_slashed": false,\n        "stake": "113441017844444454951489924484",\n        "shards": [0],\n        "num_produced_blocks": 213,\n        "num_expected_blocks": 213\n      },\n      {\n        "account_id": "zpool.pool.f863973.m0",\n        "public_key": "ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V",\n        "is_slashed": false,\n        "stake": "140932616764414290525265048028",\n        "shards": [0],\n        "num_produced_blocks": 120,\n        "num_expected_blocks": 212\n      }\n    ],\n    "next_validators": [\n      {\n        "account_id": "01node.pool.f863973.m0",\n        "public_key": "ed25519:3iNqnvBgxJPXCxu6hNdvJso1PEAc1miAD35KQMBCA3aL",\n        "stake": "177341160716540400974121040893",\n        "shards": [0]\n      },\n      {\n        "account_id": "alexandruast.pool.f863973.m0",\n        "public_key": "ed25519:A3XJ3uVGxSi9o2gnG2r8Ra3fqqodRpL4iuLTc6fNdGUj",\n        "stake": "152212670433756011274558210225",\n        "shards": [0]\n      },\n      {\n        "account_id": "aquarius.pool.f863973.m0",\n        "public_key": "ed25519:8NfEarjStDYjJTwKUgQGy7Z7UTGsZaPhTUsExheQN3r1",\n        "stake": "131041030638338742265060835987",\n        "shards": [0]\n      },\n      {\n        "account_id": "bazilik.pool.f863973.m0",\n        "public_key": "ed25519:3pDJwDQ6Y5B9QeW1jz8KunhZH4D4GQG86reTmrRfdD7c",\n        "stake": "169886556654364796730036727847",\n        "shards": [0]\n      },\n      {\n        "account_id": "bisontrails.pool.f863973.m0",\n        "public_key": "ed25519:8g4P5EXyp2b2pfVMHY1QLfkRcY59hjPfWrFCKUWX3RmR",\n        "stake": "185113946165399113822995097304",\n        "shards": [0]\n      },\n      {\n        "account_id": "bitcat.pool.f863973.m0",\n        "public_key": "ed25519:9mtnwPQyyap1QNH9ag6r4the7Jkkpdyt9HUF5G1dWxKx",\n        "stake": "135914020962862866419944507506",\n        "shards": [0]\n      },\n      {\n        "account_id": "blazenet.pool.f863973.m0",\n        "public_key": "ed25519:DiogP36wBXKFpFeqirrxN8G2Mq9vnakgBvgnHdL9CcN3",\n        "stake": "138073840925159254185212483041",\n        "shards": [0]\n      },\n      {\n        "account_id": "certusone.pool.f863973.m0",\n        "public_key": "ed25519:CKW7f41Kn8YCDPzaGLs1MrPb9h3BjQmHhbei6Ff6nRRF",\n        "stake": "177557353126393581856047095474",\n        "shards": [0]\n      },\n      {\n        "account_id": "chorus-one.pool.f863973.m0",\n        "public_key": "ed25519:6LFwyEEsqhuDxorWfsKcPPs324zLWTaoqk4o6RDXN7Qc",\n        "stake": "110967904880664326100649881128",\n        "shards": [0]\n      },\n      {\n        "account_id": "cloudpost.pool.f863973.m0",\n        "public_key": "ed25519:AVVLmJDG8z6UgmW9fmJGVFTdYxxfnqXH6c7FVQmhE6dp",\n        "stake": "137303582563490110045159846741",\n        "shards": [0]\n      },\n      {\n        "account_id": "dokia.pool.f863973.m0",\n        "public_key": "ed25519:935JMz1vLcJxFApG3TY4MA4RHhvResvoGwCrQoJxHPn9",\n        "stake": "221583843027440134728813179120",\n        "shards": [0]\n      },\n      {\n        "account_id": "dsrvlabs.pool.f863973.m0",\n        "public_key": "ed25519:61ei2efmmLkeDR1CG6JDEC2U3oZCUuC2K1X16Vmxrud9",\n        "stake": "162343309156672629963246208215",\n        "shards": [0]\n      },\n      {\n        "account_id": "fresh_lockup.pool.f863973.m0",\n        "public_key": "ed25519:7CMFLtEohojtxBkmj9Jb6AGgbphb1zvxymHzpzuyCjfG",\n        "stake": "194574146707912827852030100603",\n        "shards": [0]\n      },\n      {\n        "account_id": "inotel.pool.f863973.m0",\n        "public_key": "ed25519:C55jH1MCHYGa3tzUyZZdGrJmmCLP22Aa4v88KYpn2xwZ",\n        "stake": "179521497218882663562358374377",\n        "shards": [0]\n      },\n      {\n        "account_id": "jazza.pool.f863973.m0",\n        "public_key": "ed25519:85cPMNVrqUz8N7oWbbvWbUuamHcJNe49uRbaSzftLCz9",\n        "stake": "156567004141558073310769195719",\n        "shards": [0]\n      },\n      {\n        "account_id": "joe1.pool.f863973.m0",\n        "public_key": "ed25519:G3SxwzmiEZSm3bHnTLtxJvm3NvT1TLQcWuV1iod6i6NJ",\n        "stake": "129898367221448376460128575495",\n        "shards": [0]\n      },\n      {\n        "account_id": "kronos.pool.f863973.m0",\n        "public_key": "ed25519:3i2pertqzF8xqkJ4BrE4t4r67YiYYrUKCktbqvDgjzuQ",\n        "stake": "145291600307308103830278523851",\n        "shards": [0]\n      },\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "public_key": "ed25519:61tgPZpy8tqFeAwG4vtf2ZKCRoENiP2A1TJVWEwnbxZU",\n        "stake": "114346099616381729581424582943",\n        "shards": [0]\n      },\n      {\n        "account_id": "lowfeevalidation.pool.f863973.m0",\n        "public_key": "ed25519:EXyjSMGSnk5uGphF3gVV1jCudaAudbW8imoEccYEJg3V",\n        "stake": "114272827178534171015566175242",\n        "shards": [0]\n      },\n      {\n        "account_id": "lunanova.pool.f863973.m0",\n        "public_key": "ed25519:2fZ59qfo9QHNLijoht9cwUb9enSNcnRmXbQn1gKZxvkw",\n        "stake": "173796241314359640924313305613",\n        "shards": [0]\n      },\n      {\n        "account_id": "moonlet.pool.f863973.m0",\n        "public_key": "ed25519:3e1nVCVGNS3yr6CcUvpDAs3BhiWtyM9uTBWkyVR5Xn3K",\n        "stake": "141326111231422084384405939935",\n        "shards": [0]\n      },\n      {\n        "account_id": "node0",\n        "public_key": "ed25519:7PGseFbWxvYVgZ89K1uTJKYoKetWs7BJtbyXDzfbAcqX",\n        "stake": "1917087533938315356792420553580",\n        "shards": [0]\n      },\n      {\n        "account_id": "node1",\n        "public_key": "ed25519:6DSjZ8mvsRZDvFqFxo8tCKePG96omXW7eVYVSySmDk8e",\n        "stake": "1915912070849706566898523265362",\n        "shards": [0]\n      },\n      {\n        "account_id": "node2",\n        "public_key": "ed25519:GkDv7nSMS3xcqA45cpMvFmfV1o4fRF6zYo1JRR6mNqg5",\n        "stake": "1849778202731933988446605407109",\n        "shards": [0]\n      },\n      {\n        "account_id": "node3",\n        "public_key": "ed25519:ydgzeXHJ5Xyt7M1gXLxqLBW1Ejx6scNV5Nx2pxFM8su",\n        "stake": "1253713857932062021626652303305",\n        "shards": [0]\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "public_key": "ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",\n        "stake": "132333065508677559475570461579",\n        "shards": [0]\n      },\n      {\n        "account_id": "northernlights.stakingpool",\n        "public_key": "ed25519:CsMecqKCfagnebMB3ha1uRubay5Z4V85req23bNAJSG3",\n        "stake": "160494659810582810750858869593",\n        "shards": [0]\n      },\n      {\n        "account_id": "orangeclub.pool.f863973.m0",\n        "public_key": "ed25519:HezFeSzcwuR5wvkqccgMCMnpf1eQkVCfk52tXZEdKZHz",\n        "stake": "144714977470413958038055754809",\n        "shards": [0]\n      },\n      {\n        "account_id": "pathrock.pool.f863973.m0",\n        "public_key": "ed25519:G138GdQsU7PdFLD6X88NmTLAEDR7agPcq9HLZqGpegkm",\n        "stake": "125851226796631921571804668732",\n        "shards": [0]\n      },\n      {\n        "account_id": "pool_easy2stake.pool.f863973.m0",\n        "public_key": "ed25519:8nzKxvmyeauQRehWkby8GfWNLgqPiF5FCRFSD75M1Rwh",\n        "stake": "177807549352374182247265978294",\n        "shards": [0]\n      },\n      {\n        "account_id": "sl1sub.pool.f863973.m0",\n        "public_key": "ed25519:3URBpNUjNAMzugQH1rdSKMtwFM8AwHaJgZk5Z6YtnfFL",\n        "stake": "156546228606913052982706314599",\n        "shards": [0]\n      },\n      {\n        "account_id": "staked.pool.6fb1358",\n        "public_key": "ed25519:684rMbuVYYgL2CkmYgC1weLh3erd2bwrmtQtJJhWzPwj",\n        "stake": "127566960646771620637977634520",\n        "shards": [0]\n      },\n      {\n        "account_id": "staked.pool.f863973.m0",\n        "public_key": "ed25519:D2afKYVaKQ1LGiWbMAZRfkKLgqimTR74wvtESvjx5Ft2",\n        "stake": "141284196855966747583242721111",\n        "shards": [0]\n      },\n      {\n        "account_id": "stakin.pool.f863973.m0",\n        "public_key": "ed25519:GvddxjaxBCqGGB4kMNWNFtvozU1EEZ2jrnggKZW8LaU4",\n        "stake": "122853080560791799567241762038",\n        "shards": [0]\n      },\n      {\n        "account_id": "staking-power.pool.f863973.m0",\n        "public_key": "ed25519:4s79F6Fdjgb3rHXPLwaXZG4Hq7Za8nogUu3vXEamRBQo",\n        "stake": "113878597697173990840757447344",\n        "shards": [0]\n      },\n      {\n        "account_id": "syncnode.pool.f863973.m0",\n        "public_key": "ed25519:FUAVDkmLhuTbKYv4GWuWv9ogjKzRatLd5ZBMKXRy7WqE",\n        "stake": "134103630138795323490241660174",\n        "shards": [0]\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "public_key": "ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",\n        "stake": "163554668234785516757420218799",\n        "shards": [0]\n      },\n      {\n        "account_id": "top.pool.f863973.m0",\n        "public_key": "ed25519:FR5qxAsP8GgXDN96pappLtWMywiqWsPVqT3HLE3YaUx",\n        "stake": "165611741467072665024638629174",\n        "shards": [0]\n      },\n      {\n        "account_id": "valeraverim.pool.f863973.m0",\n        "public_key": "ed25519:3686ABqNUZc1qhLWLHg5xZpBzrWPiUCMNZxcCNmg3e2s",\n        "stake": "192723621295992295990275575014",\n        "shards": [0]\n      },\n      {\n        "account_id": "zainy.pool.f863973.m0",\n        "public_key": "ed25519:37KfhBNYjqpaUVh3ft5kPcFn3xK1eVvtDZJCQQVCGnzQ",\n        "stake": "114027175849273464802110072969",\n        "shards": [0]\n      },\n      {\n        "account_id": "zpool.pool.f863973.m0",\n        "public_key": "ed25519:ETFRFNHfvd6fpj74MGYYQp3diY8WB4bFmWMxjTB2yY4V",\n        "stake": "141660662431449802378487016195",\n        "shards": [0]\n      }\n    ],\n    "current_fishermen": [\n      {\n        "account_id": "staked.stakingpool",\n        "public_key": "ed25519:5VmCXxWepj22uFoKmrxk6DTiFa3fuTzDcwGxM8uUErpr",\n        "stake": "5957256918881889179239884296"\n      },\n      {\n        "account_id": "bisontrails.stakingpool",\n        "public_key": "ed25519:ED2v5KtScbk6aNjGcTn1YMDUu3EXfD5HPt1x6RiYBypk",\n        "stake": "7679439354334034871130713908"\n      },\n      {\n        "account_id": "cryptium.stakingpool",\n        "public_key": "ed25519:2usUkjmKWxQw7QUeFfELHCEqS2UxjwsRqnCkA5oQ6A2B",\n        "stake": "6484546971716985483357166277"\n      },\n      {\n        "account_id": "buildlinks3.pool.f863973.m0",\n        "public_key": "ed25519:Cfy8xjSsvVquSqo7W4A2bRX1vkLPycLgyCvFNs3Rz6bb",\n        "stake": "81221864655530313350540629757"\n      },\n      {\n        "account_id": "mmm.pool.f863973.m0",\n        "public_key": "ed25519:3jEqDDKaJEg1r8UGu2x2dC55BXE7i26yNFQzvfJkkHkf",\n        "stake": "80030001196381772535600000000"\n      }\n    ],\n    "next_fishermen": [\n      {\n        "account_id": "staked.stakingpool",\n        "public_key": "ed25519:5VmCXxWepj22uFoKmrxk6DTiFa3fuTzDcwGxM8uUErpr",\n        "stake": "5957256918881889179239884296"\n      },\n      {\n        "account_id": "bisontrails.stakingpool",\n        "public_key": "ed25519:ED2v5KtScbk6aNjGcTn1YMDUu3EXfD5HPt1x6RiYBypk",\n        "stake": "7679439354334034871130713908"\n      },\n      {\n        "account_id": "cryptium.stakingpool",\n        "public_key": "ed25519:2usUkjmKWxQw7QUeFfELHCEqS2UxjwsRqnCkA5oQ6A2B",\n        "stake": "6484546971716985483357166277"\n      },\n      {\n        "account_id": "buildlinks3.pool.f863973.m0",\n        "public_key": "ed25519:Cfy8xjSsvVquSqo7W4A2bRX1vkLPycLgyCvFNs3Rz6bb",\n        "stake": "81221864655530313350540629757"\n      },\n      {\n        "account_id": "mmm.pool.f863973.m0",\n        "public_key": "ed25519:3jEqDDKaJEg1r8UGu2x2dC55BXE7i26yNFQzvfJkkHkf",\n        "stake": "80030001196381772535600000000"\n      }\n    ],\n    "current_proposals": [\n      {\n        "account_id": "kytzu.pool.f863973.m0",\n        "public_key": "ed25519:61tgPZpy8tqFeAwG4vtf2ZKCRoENiP2A1TJVWEwnbxZU",\n        "stake": "114346100195275968419224582943"\n      },\n      {\n        "account_id": "nodeasy.pool.f863973.m0",\n        "public_key": "ed25519:25Dhg8NBvQhsVTuugav3t1To1X1zKiomDmnh8yN9hHMb",\n        "stake": "132333066144809013154670461579"\n      },\n      {\n        "account_id": "thepassivetrust.pool.f863973.m0",\n        "public_key": "ed25519:4NccD2DNJpBkDmWeJ2GbqPoivQ93qcKiR4PHALJKCTod",\n        "stake": "163554672455685458970920218837"\n      }\n    ],\n    "prev_epoch_kickout": [],\n    "epoch_start_height": 17754191,\n    "epoch_height": 321\n  },\n  "id": "dontcare"\n}\n')))),(0,l.kt)("h4",{id:"what-could-go-wrong-2"},"What could go wrong?"),(0,l.kt)("p",null,"When API request fails, RPC server returns a structured error response with a limited number of well-defined error variants, so client code can exhaustively handle all the possible error cases. Our JSON-RPC errors follow ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/joyent/node-verror"},"verror")," convention for structuring the error response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": {\n        "name": <ERROR_TYPE>,\n        "cause": {\n            "info": {..},\n            "name": <ERROR_CAUSE>\n        },\n        "code": -32000,\n        "data": String,\n        "message": "Server error",\n    },\n    "id": "dontcare",\n    "jsonrpc": "2.0"\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Heads up")),(0,l.kt)("p",{parentName:"blockquote"},"The fields ",(0,l.kt)("inlineCode",{parentName:"p"},"code"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"data"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"message")," in the structure above are considered legacy ones and might be deprecated in the future. Please, don't rely on them.")),(0,l.kt)("p",null,"Here is the exhaustive list of the error variants that can be returned by ",(0,l.kt)("inlineCode",{parentName:"p"},"validators")," method:"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"ERROR_TYPE",(0,l.kt)("br",null),(0,l.kt)("code",null,"error.name")),(0,l.kt)("th",null,"ERROR_CAUSE",(0,l.kt)("br",null),(0,l.kt)("code",null,"error.cause.name")),(0,l.kt)("th",null,"Reason"),(0,l.kt)("th",null,"Solution"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,"HANDLER_ERROR"),(0,l.kt)("td",null,"UNKNOWN_EPOCH"),(0,l.kt)("td",null,"An epoch for the provided block can't be found in a database"),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,"Check that the requested block is legit"),(0,l.kt)("li",null,"If the block had been produced more than 5 epochs ago, try to send your request to an archival node"),(0,l.kt)("li",null,"Check that the requested block is the last block of some epoch")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,"REQUEST_VALIDATION_ERROR"),(0,l.kt)("td",null,"PARSE_ERROR"),(0,l.kt)("td",null,"Passed arguments can't be parsed by JSON RPC server (missing arguments, wrong format, etc.)"),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,"Check the arguments passed and pass the correct ones"),(0,l.kt)("li",null,"Check ",(0,l.kt)("code",null,"error.cause.info")," for more details")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,"INTERNAL_ERROR"),(0,l.kt)("td",null,"INTERNAL_ERROR"),(0,l.kt)("td",null,"Something went wrong with the node itself or overloaded"),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,"Try again later"),(0,l.kt)("li",null,"Send a request to a different node"),(0,l.kt)("li",null,"Check ",(0,l.kt)("code",null,"error.cause.info")," for more details")))))),(0,l.kt)("hr",null))}_.isMDXComponent=!0}}]);